

================================================================
== Vivado HLS Report for 'act_fun'
================================================================
* Date:           Sun Apr 26 18:52:13 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        neural_net_HLS
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.390 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |       33|       33| 0.330 us | 0.330 us |    1|    1| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 34


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 1
  Pipeline-0 : II = 1, D = 34, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.09>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%vec_read = call float @_ssdm_op_Read.ap_auto.float(float %vec) nounwind" [neural_net_HLS/solution1/kernel.cpp:5]   --->   Operation 35 'read' 'vec_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [2/2] (5.09ns)   --->   "%tmp_21 = fcmp ole float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 36 'fcmp' 'tmp_21' <Predicate = true> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [2/2] (4.09ns)   --->   "%tmp_15 = fpext float %vec_read to double" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 37 'fpext' 'tmp_15' <Predicate = true> <Delay = 4.09> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.07>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast float %vec_read to i32" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 38 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln6, i32 23, i32 30)" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 39 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i32 %bitcast_ln6 to i23" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 40 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.47ns)   --->   "%icmp_ln6 = icmp ne i8 %tmp, -1" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 41 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (2.40ns)   --->   "%icmp_ln6_1 = icmp eq i23 %trunc_ln6, 0" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 42 'icmp' 'icmp_ln6_1' <Predicate = true> <Delay = 2.40> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.97ns)   --->   "%or_ln6 = or i1 %icmp_ln6_1, %icmp_ln6" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 43 'or' 'or_ln6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/2] (5.09ns)   --->   "%tmp_21 = fcmp ole float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 44 'fcmp' 'tmp_21' <Predicate = true> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.97ns)   --->   "%and_ln6 = and i1 %or_ln6, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 45 'and' 'and_ln6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/2] (4.09ns)   --->   "%tmp_15 = fpext float %vec_read to double" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 46 'fpext' 'tmp_15' <Predicate = true> <Delay = 4.09> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 3 <SV = 2> <Delay = 7.79>
ST_3 : Operation 47 [2/2] (5.09ns)   --->   "%tmp_24 = fcmp ogt float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 47 'fcmp' 'tmp_24' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [2/2] (5.09ns)   --->   "%tmp_25 = fcmp ole float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 48 'fcmp' 'tmp_25' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [2/2] (5.09ns)   --->   "%tmp_26 = fcmp ogt float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 49 'fcmp' 'tmp_26' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [2/2] (5.09ns)   --->   "%tmp_27 = fcmp olt float %vec_read, 4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 50 'fcmp' 'tmp_27' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [6/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 51 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.79>
ST_4 : Operation 52 [1/1] (0.97ns)   --->   "%xor_ln6 = xor i1 %and_ln6, true" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 52 'xor' 'xor_ln6' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/2] (5.09ns)   --->   "%tmp_24 = fcmp ogt float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 53 'fcmp' 'tmp_24' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node and_ln8_1)   --->   "%and_ln8 = and i1 %or_ln6, %tmp_24" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 54 'and' 'and_ln8' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/2] (5.09ns)   --->   "%tmp_25 = fcmp ole float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 55 'fcmp' 'tmp_25' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln8_1 = and i1 %and_ln8, %tmp_25" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 56 'and' 'and_ln8_1' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%xor_ln8 = xor i1 %and_ln8_1, true" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 57 'xor' 'xor_ln8' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/2] (5.09ns)   --->   "%tmp_26 = fcmp ogt float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 58 'fcmp' 'tmp_26' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/2] (5.09ns)   --->   "%tmp_27 = fcmp olt float %vec_read, 4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 59 'fcmp' 'tmp_27' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10 = and i1 %or_ln6, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 60 'and' 'and_ln10' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [5/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 61 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10_1 = and i1 %xor_ln8, %xor_ln6" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 62 'and' 'and_ln10_1' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10_2 = and i1 %and_ln10, %tmp_26" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 63 'and' 'and_ln10_2' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln10_3 = and i1 %and_ln10_2, %and_ln10_1" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 64 'and' 'and_ln10_3' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.79>
ST_5 : Operation 65 [4/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 65 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.79>
ST_6 : Operation 66 [3/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 66 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.79>
ST_7 : Operation 67 [2/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 67 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.79>
ST_8 : Operation 68 [1/6] (7.79ns)   --->   "%tmp_16 = fmul double %tmp_15, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 68 'dmul' 'tmp_16' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.39>
ST_9 : Operation 69 [6/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 69 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 70 [6/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 70 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 8.39>
ST_10 : Operation 71 [5/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 71 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 72 [5/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 72 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 8.39>
ST_11 : Operation 73 [4/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 73 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 74 [4/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 74 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 8.39>
ST_12 : Operation 75 [3/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 75 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 76 [3/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 76 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 8.39>
ST_13 : Operation 77 [2/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 77 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 78 [2/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 78 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 8.39>
ST_14 : Operation 79 [1/6] (8.39ns)   --->   "%tmp_17 = fadd double %tmp_16, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 79 'dadd' 'tmp_17' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 80 [1/6] (8.39ns)   --->   "%tmp_s = fadd double %tmp_16, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 80 'dadd' 'tmp_s' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.79>
ST_15 : Operation 81 [6/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 81 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 82 [6/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 82 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.79>
ST_16 : Operation 83 [5/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 83 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 84 [5/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 84 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.79>
ST_17 : Operation 85 [4/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 85 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 86 [4/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 86 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.79>
ST_18 : Operation 87 [3/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 87 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 88 [3/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 88 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.79>
ST_19 : Operation 89 [2/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 89 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 90 [2/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 90 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.79>
ST_20 : Operation 91 [1/6] (7.79ns)   --->   "%tmp_18 = fmul double %tmp_17, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 91 'dmul' 'tmp_18' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 92 [1/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_s, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 92 'dmul' 'tmp_20' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.79>
ST_21 : Operation 93 [6/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 93 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 94 [6/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 94 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.79>
ST_22 : Operation 95 [5/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 95 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 96 [5/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 96 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.79>
ST_23 : Operation 97 [4/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 97 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 98 [4/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 98 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.79>
ST_24 : Operation 99 [3/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 99 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 100 [3/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 100 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.79>
ST_25 : Operation 101 [2/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 101 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 102 [2/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 102 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.79>
ST_26 : Operation 103 [1/6] (7.79ns)   --->   "%tmp_19 = fmul double %tmp_18, %tmp_17" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 103 'dmul' 'tmp_19' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 104 [1/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_20, %tmp_s" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 104 'dmul' 'tmp_22' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 8.39>
ST_27 : Operation 105 [2/2] (5.16ns)   --->   "%vec_assign = fptrunc double %tmp_19 to float" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 105 'fptrunc' 'vec_assign' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_27 : Operation 106 [6/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 106 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 8.39>
ST_28 : Operation 107 [1/2] (5.16ns)   --->   "%vec_assign = fptrunc double %tmp_19 to float" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 107 'fptrunc' 'vec_assign' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_28 : Operation 108 [5/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 108 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 8.39>
ST_29 : Operation 109 [4/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 109 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 8.39>
ST_30 : Operation 110 [3/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 110 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 8.39>
ST_31 : Operation 111 [2/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 111 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 8.39>
ST_32 : Operation 112 [1/6] (8.39ns)   --->   "%tmp_23 = fsub double 1.000000e+00, %tmp_22" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 112 'dsub' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 5.16>
ST_33 : Operation 113 [2/2] (5.16ns)   --->   "%vec_assign_1 = fptrunc double %tmp_23 to float" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 113 'fptrunc' 'vec_assign_1' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 34 <SV = 33> <Delay = 6.14>
ST_34 : Operation 114 [1/2] (5.16ns)   --->   "%vec_assign_1 = fptrunc double %tmp_23 to float" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 114 'fptrunc' 'vec_assign_1' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_34 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln8_2 = and i1 %and_ln8_1, %xor_ln6" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 115 'and' 'and_ln8_2' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%select_ln8 = select i1 %and_ln8_2, float %vec_assign, float 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 116 'select' 'select_ln8' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%select_ln10 = select i1 %and_ln10_3, float %vec_assign_1, float %select_ln8" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 117 'select' 'select_ln10' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 118 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, float 0.000000e+00, float %select_ln10" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 118 'select' 'select_ln6' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 119 [1/1] (0.00ns)   --->   "ret float %select_ln6" [neural_net_HLS/solution1/kernel.cpp:14]   --->   Operation 119 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 1
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ vec]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
vec_read     (read      ) [ 01111000000000000000000000000000000]
bitcast_ln6  (bitcast   ) [ 00000000000000000000000000000000000]
tmp          (partselect) [ 00000000000000000000000000000000000]
trunc_ln6    (trunc     ) [ 00000000000000000000000000000000000]
icmp_ln6     (icmp      ) [ 00000000000000000000000000000000000]
icmp_ln6_1   (icmp      ) [ 00000000000000000000000000000000000]
or_ln6       (or        ) [ 01011000000000000000000000000000000]
tmp_21       (fcmp      ) [ 00000000000000000000000000000000000]
and_ln6      (and       ) [ 01011111111111111111111111111111111]
tmp_15       (fpext     ) [ 01011111100000000000000000000000000]
xor_ln6      (xor       ) [ 01000111111111111111111111111111111]
tmp_24       (fcmp      ) [ 00000000000000000000000000000000000]
and_ln8      (and       ) [ 00000000000000000000000000000000000]
tmp_25       (fcmp      ) [ 00000000000000000000000000000000000]
and_ln8_1    (and       ) [ 01000111111111111111111111111111111]
xor_ln8      (xor       ) [ 00000000000000000000000000000000000]
tmp_26       (fcmp      ) [ 00000000000000000000000000000000000]
tmp_27       (fcmp      ) [ 00000000000000000000000000000000000]
and_ln10     (and       ) [ 00000000000000000000000000000000000]
and_ln10_1   (and       ) [ 00000000000000000000000000000000000]
and_ln10_2   (and       ) [ 00000000000000000000000000000000000]
and_ln10_3   (and       ) [ 01000111111111111111111111111111111]
tmp_16       (dmul      ) [ 01000000011111100000000000000000000]
tmp_17       (dadd      ) [ 01000000000000011111111111100000000]
tmp_s        (dadd      ) [ 01000000000000011111111111100000000]
tmp_18       (dmul      ) [ 01000000000000000000011111100000000]
tmp_20       (dmul      ) [ 01000000000000000000011111100000000]
tmp_19       (dmul      ) [ 01000000000000000000000000011000000]
tmp_22       (dmul      ) [ 01000000000000000000000000011111100]
vec_assign   (fptrunc   ) [ 01000000000000000000000000000111111]
tmp_23       (dsub      ) [ 01000000000000000000000000000000011]
vec_assign_1 (fptrunc   ) [ 00000000000000000000000000000000000]
and_ln8_2    (and       ) [ 00000000000000000000000000000000000]
select_ln8   (select    ) [ 00000000000000000000000000000000000]
select_ln10  (select    ) [ 00000000000000000000000000000000000]
select_ln6   (select    ) [ 00000000000000000000000000000000000]
ret_ln14     (ret       ) [ 00000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="vec">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="vec"/></StgValue>
</bind>
</comp>

<comp id="2" class="1001" name="const_2">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.float"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1004" name="vec_read_read_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="32" slack="0"/>
<pin id="34" dir="0" index="1" bw="32" slack="0"/>
<pin id="35" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="vec_read/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="grp_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="64" slack="1"/>
<pin id="40" dir="1" index="1" bw="32" slack="6"/>
</pin_list>
<bind>
<opcode="fptrunc(40) " fcode="fptrunc"/>
<opset="vec_assign/27 "/>
</bind>
</comp>

<comp id="41" class="1004" name="grp_fu_41">
<pin_list>
<pin id="42" dir="0" index="0" bw="64" slack="1"/>
<pin id="43" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="fptrunc(40) " fcode="fptrunc"/>
<opset="vec_assign_1/33 "/>
</bind>
</comp>

<comp id="44" class="1004" name="grp_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="32" slack="0"/>
<pin id="46" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="fpext(41) " fcode="fpext"/>
<opset="tmp_15/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="grp_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="32" slack="0"/>
<pin id="50" dir="0" index="1" bw="32" slack="0"/>
<pin id="51" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_21/1 "/>
</bind>
</comp>

<comp id="54" class="1004" name="grp_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="32" slack="2"/>
<pin id="56" dir="0" index="1" bw="32" slack="0"/>
<pin id="57" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_24/3 "/>
</bind>
</comp>

<comp id="59" class="1004" name="grp_fu_59">
<pin_list>
<pin id="60" dir="0" index="0" bw="32" slack="2"/>
<pin id="61" dir="0" index="1" bw="32" slack="0"/>
<pin id="62" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_25/3 "/>
</bind>
</comp>

<comp id="64" class="1004" name="grp_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="2"/>
<pin id="66" dir="0" index="1" bw="32" slack="0"/>
<pin id="67" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_26/3 "/>
</bind>
</comp>

<comp id="69" class="1004" name="grp_fu_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="32" slack="2"/>
<pin id="71" dir="0" index="1" bw="32" slack="0"/>
<pin id="72" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_27/3 "/>
</bind>
</comp>

<comp id="74" class="1004" name="grp_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="64" slack="1"/>
<pin id="76" dir="0" index="1" bw="64" slack="0"/>
<pin id="77" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dadd(508) " fcode="dadd"/>
<opset="tmp_17/9 tmp_s/9 "/>
</bind>
</comp>

<comp id="80" class="1004" name="grp_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="64" slack="0"/>
<pin id="82" dir="0" index="1" bw="64" slack="1"/>
<pin id="83" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dsub(509) " fcode="dadd"/>
<opset="tmp_23/27 "/>
</bind>
</comp>

<comp id="85" class="1004" name="grp_fu_85">
<pin_list>
<pin id="86" dir="0" index="0" bw="64" slack="1"/>
<pin id="87" dir="0" index="1" bw="64" slack="0"/>
<pin id="88" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_16/3 "/>
</bind>
</comp>

<comp id="90" class="1004" name="grp_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="64" slack="1"/>
<pin id="92" dir="0" index="1" bw="64" slack="0"/>
<pin id="93" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_18/15 tmp_20/15 "/>
</bind>
</comp>

<comp id="95" class="1004" name="grp_fu_95">
<pin_list>
<pin id="96" dir="0" index="0" bw="64" slack="1"/>
<pin id="97" dir="0" index="1" bw="64" slack="7"/>
<pin id="98" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_19/21 tmp_22/21 "/>
</bind>
</comp>

<comp id="99" class="1005" name="reg_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="64" slack="1"/>
<pin id="101" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_17 tmp_s "/>
</bind>
</comp>

<comp id="105" class="1005" name="reg_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="64" slack="1"/>
<pin id="107" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_18 tmp_20 "/>
</bind>
</comp>

<comp id="110" class="1005" name="reg_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="64" slack="1"/>
<pin id="112" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_19 tmp_22 "/>
</bind>
</comp>

<comp id="116" class="1004" name="bitcast_ln6_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="32" slack="1"/>
<pin id="118" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln6/2 "/>
</bind>
</comp>

<comp id="119" class="1004" name="tmp_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="8" slack="0"/>
<pin id="121" dir="0" index="1" bw="32" slack="0"/>
<pin id="122" dir="0" index="2" bw="6" slack="0"/>
<pin id="123" dir="0" index="3" bw="6" slack="0"/>
<pin id="124" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="129" class="1004" name="trunc_ln6_fu_129">
<pin_list>
<pin id="130" dir="0" index="0" bw="32" slack="0"/>
<pin id="131" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln6/2 "/>
</bind>
</comp>

<comp id="133" class="1004" name="icmp_ln6_fu_133">
<pin_list>
<pin id="134" dir="0" index="0" bw="8" slack="0"/>
<pin id="135" dir="0" index="1" bw="1" slack="0"/>
<pin id="136" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6/2 "/>
</bind>
</comp>

<comp id="139" class="1004" name="icmp_ln6_1_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="23" slack="0"/>
<pin id="141" dir="0" index="1" bw="1" slack="0"/>
<pin id="142" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6_1/2 "/>
</bind>
</comp>

<comp id="145" class="1004" name="or_ln6_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="1" slack="0"/>
<pin id="147" dir="0" index="1" bw="1" slack="0"/>
<pin id="148" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln6/2 "/>
</bind>
</comp>

<comp id="151" class="1004" name="and_ln6_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="1" slack="0"/>
<pin id="153" dir="0" index="1" bw="1" slack="0"/>
<pin id="154" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln6/2 "/>
</bind>
</comp>

<comp id="157" class="1004" name="xor_ln6_fu_157">
<pin_list>
<pin id="158" dir="0" index="0" bw="1" slack="2"/>
<pin id="159" dir="0" index="1" bw="1" slack="0"/>
<pin id="160" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln6/4 "/>
</bind>
</comp>

<comp id="162" class="1004" name="and_ln8_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="1" slack="2"/>
<pin id="164" dir="0" index="1" bw="1" slack="0"/>
<pin id="165" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8/4 "/>
</bind>
</comp>

<comp id="167" class="1004" name="and_ln8_1_fu_167">
<pin_list>
<pin id="168" dir="0" index="0" bw="1" slack="0"/>
<pin id="169" dir="0" index="1" bw="1" slack="0"/>
<pin id="170" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8_1/4 "/>
</bind>
</comp>

<comp id="173" class="1004" name="xor_ln8_fu_173">
<pin_list>
<pin id="174" dir="0" index="0" bw="1" slack="0"/>
<pin id="175" dir="0" index="1" bw="1" slack="0"/>
<pin id="176" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln8/4 "/>
</bind>
</comp>

<comp id="179" class="1004" name="and_ln10_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="1" slack="2"/>
<pin id="181" dir="0" index="1" bw="1" slack="0"/>
<pin id="182" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10/4 "/>
</bind>
</comp>

<comp id="184" class="1004" name="and_ln10_1_fu_184">
<pin_list>
<pin id="185" dir="0" index="0" bw="1" slack="0"/>
<pin id="186" dir="0" index="1" bw="1" slack="0"/>
<pin id="187" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_1/4 "/>
</bind>
</comp>

<comp id="190" class="1004" name="and_ln10_2_fu_190">
<pin_list>
<pin id="191" dir="0" index="0" bw="1" slack="0"/>
<pin id="192" dir="0" index="1" bw="1" slack="0"/>
<pin id="193" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_2/4 "/>
</bind>
</comp>

<comp id="196" class="1004" name="and_ln10_3_fu_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="1" slack="0"/>
<pin id="198" dir="0" index="1" bw="1" slack="0"/>
<pin id="199" dir="1" index="2" bw="1" slack="5"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_3/4 "/>
</bind>
</comp>

<comp id="202" class="1004" name="and_ln8_2_fu_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="1" slack="30"/>
<pin id="204" dir="0" index="1" bw="1" slack="30"/>
<pin id="205" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8_2/34 "/>
</bind>
</comp>

<comp id="206" class="1004" name="select_ln8_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="1" slack="0"/>
<pin id="208" dir="0" index="1" bw="32" slack="6"/>
<pin id="209" dir="0" index="2" bw="32" slack="0"/>
<pin id="210" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln8/34 "/>
</bind>
</comp>

<comp id="213" class="1004" name="select_ln10_fu_213">
<pin_list>
<pin id="214" dir="0" index="0" bw="1" slack="30"/>
<pin id="215" dir="0" index="1" bw="32" slack="0"/>
<pin id="216" dir="0" index="2" bw="32" slack="0"/>
<pin id="217" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln10/34 "/>
</bind>
</comp>

<comp id="220" class="1004" name="select_ln6_fu_220">
<pin_list>
<pin id="221" dir="0" index="0" bw="1" slack="32"/>
<pin id="222" dir="0" index="1" bw="32" slack="0"/>
<pin id="223" dir="0" index="2" bw="32" slack="0"/>
<pin id="224" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln6/34 "/>
</bind>
</comp>

<comp id="227" class="1005" name="vec_read_reg_227">
<pin_list>
<pin id="228" dir="0" index="0" bw="32" slack="1"/>
<pin id="229" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vec_read "/>
</bind>
</comp>

<comp id="238" class="1005" name="or_ln6_reg_238">
<pin_list>
<pin id="239" dir="0" index="0" bw="1" slack="2"/>
<pin id="240" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="or_ln6 "/>
</bind>
</comp>

<comp id="244" class="1005" name="and_ln6_reg_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="1" slack="1"/>
<pin id="246" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="and_ln6 "/>
</bind>
</comp>

<comp id="250" class="1005" name="tmp_15_reg_250">
<pin_list>
<pin id="251" dir="0" index="0" bw="64" slack="1"/>
<pin id="252" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_15 "/>
</bind>
</comp>

<comp id="255" class="1005" name="xor_ln6_reg_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="1" slack="30"/>
<pin id="257" dir="1" index="1" bw="1" slack="30"/>
</pin_list>
<bind>
<opset="xor_ln6 "/>
</bind>
</comp>

<comp id="260" class="1005" name="and_ln8_1_reg_260">
<pin_list>
<pin id="261" dir="0" index="0" bw="1" slack="30"/>
<pin id="262" dir="1" index="1" bw="1" slack="30"/>
</pin_list>
<bind>
<opset="and_ln8_1 "/>
</bind>
</comp>

<comp id="265" class="1005" name="and_ln10_3_reg_265">
<pin_list>
<pin id="266" dir="0" index="0" bw="1" slack="5"/>
<pin id="267" dir="1" index="1" bw="1" slack="30"/>
</pin_list>
<bind>
<opset="and_ln10_3 "/>
</bind>
</comp>

<comp id="270" class="1005" name="tmp_16_reg_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="64" slack="1"/>
<pin id="272" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_16 "/>
</bind>
</comp>

<comp id="275" class="1005" name="vec_assign_reg_275">
<pin_list>
<pin id="276" dir="0" index="0" bw="32" slack="6"/>
<pin id="277" dir="1" index="1" bw="32" slack="6"/>
</pin_list>
<bind>
<opset="vec_assign "/>
</bind>
</comp>

<comp id="280" class="1005" name="tmp_23_reg_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="64" slack="1"/>
<pin id="282" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_23 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="36"><net_src comp="2" pin="0"/><net_sink comp="32" pin=0"/></net>

<net id="37"><net_src comp="0" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="47"><net_src comp="32" pin="2"/><net_sink comp="44" pin=0"/></net>

<net id="52"><net_src comp="32" pin="2"/><net_sink comp="48" pin=0"/></net>

<net id="53"><net_src comp="4" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="58"><net_src comp="4" pin="0"/><net_sink comp="54" pin=1"/></net>

<net id="63"><net_src comp="16" pin="0"/><net_sink comp="59" pin=1"/></net>

<net id="68"><net_src comp="16" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="73"><net_src comp="18" pin="0"/><net_sink comp="69" pin=1"/></net>

<net id="78"><net_src comp="24" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="79"><net_src comp="26" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="84"><net_src comp="24" pin="0"/><net_sink comp="80" pin=0"/></net>

<net id="89"><net_src comp="20" pin="0"/><net_sink comp="85" pin=1"/></net>

<net id="94"><net_src comp="28" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="102"><net_src comp="74" pin="2"/><net_sink comp="99" pin=0"/></net>

<net id="103"><net_src comp="99" pin="1"/><net_sink comp="90" pin=0"/></net>

<net id="104"><net_src comp="99" pin="1"/><net_sink comp="95" pin=1"/></net>

<net id="108"><net_src comp="90" pin="2"/><net_sink comp="105" pin=0"/></net>

<net id="109"><net_src comp="105" pin="1"/><net_sink comp="95" pin=0"/></net>

<net id="113"><net_src comp="95" pin="2"/><net_sink comp="110" pin=0"/></net>

<net id="114"><net_src comp="110" pin="1"/><net_sink comp="38" pin=0"/></net>

<net id="115"><net_src comp="110" pin="1"/><net_sink comp="80" pin=1"/></net>

<net id="125"><net_src comp="6" pin="0"/><net_sink comp="119" pin=0"/></net>

<net id="126"><net_src comp="116" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="127"><net_src comp="8" pin="0"/><net_sink comp="119" pin=2"/></net>

<net id="128"><net_src comp="10" pin="0"/><net_sink comp="119" pin=3"/></net>

<net id="132"><net_src comp="116" pin="1"/><net_sink comp="129" pin=0"/></net>

<net id="137"><net_src comp="119" pin="4"/><net_sink comp="133" pin=0"/></net>

<net id="138"><net_src comp="12" pin="0"/><net_sink comp="133" pin=1"/></net>

<net id="143"><net_src comp="129" pin="1"/><net_sink comp="139" pin=0"/></net>

<net id="144"><net_src comp="14" pin="0"/><net_sink comp="139" pin=1"/></net>

<net id="149"><net_src comp="139" pin="2"/><net_sink comp="145" pin=0"/></net>

<net id="150"><net_src comp="133" pin="2"/><net_sink comp="145" pin=1"/></net>

<net id="155"><net_src comp="145" pin="2"/><net_sink comp="151" pin=0"/></net>

<net id="156"><net_src comp="48" pin="2"/><net_sink comp="151" pin=1"/></net>

<net id="161"><net_src comp="22" pin="0"/><net_sink comp="157" pin=1"/></net>

<net id="166"><net_src comp="54" pin="2"/><net_sink comp="162" pin=1"/></net>

<net id="171"><net_src comp="162" pin="2"/><net_sink comp="167" pin=0"/></net>

<net id="172"><net_src comp="59" pin="2"/><net_sink comp="167" pin=1"/></net>

<net id="177"><net_src comp="167" pin="2"/><net_sink comp="173" pin=0"/></net>

<net id="178"><net_src comp="22" pin="0"/><net_sink comp="173" pin=1"/></net>

<net id="183"><net_src comp="69" pin="2"/><net_sink comp="179" pin=1"/></net>

<net id="188"><net_src comp="173" pin="2"/><net_sink comp="184" pin=0"/></net>

<net id="189"><net_src comp="157" pin="2"/><net_sink comp="184" pin=1"/></net>

<net id="194"><net_src comp="179" pin="2"/><net_sink comp="190" pin=0"/></net>

<net id="195"><net_src comp="64" pin="2"/><net_sink comp="190" pin=1"/></net>

<net id="200"><net_src comp="190" pin="2"/><net_sink comp="196" pin=0"/></net>

<net id="201"><net_src comp="184" pin="2"/><net_sink comp="196" pin=1"/></net>

<net id="211"><net_src comp="202" pin="2"/><net_sink comp="206" pin=0"/></net>

<net id="212"><net_src comp="30" pin="0"/><net_sink comp="206" pin=2"/></net>

<net id="218"><net_src comp="41" pin="1"/><net_sink comp="213" pin=1"/></net>

<net id="219"><net_src comp="206" pin="3"/><net_sink comp="213" pin=2"/></net>

<net id="225"><net_src comp="16" pin="0"/><net_sink comp="220" pin=1"/></net>

<net id="226"><net_src comp="213" pin="3"/><net_sink comp="220" pin=2"/></net>

<net id="230"><net_src comp="32" pin="2"/><net_sink comp="227" pin=0"/></net>

<net id="231"><net_src comp="227" pin="1"/><net_sink comp="116" pin=0"/></net>

<net id="232"><net_src comp="227" pin="1"/><net_sink comp="48" pin=0"/></net>

<net id="233"><net_src comp="227" pin="1"/><net_sink comp="44" pin=0"/></net>

<net id="234"><net_src comp="227" pin="1"/><net_sink comp="54" pin=0"/></net>

<net id="235"><net_src comp="227" pin="1"/><net_sink comp="59" pin=0"/></net>

<net id="236"><net_src comp="227" pin="1"/><net_sink comp="64" pin=0"/></net>

<net id="237"><net_src comp="227" pin="1"/><net_sink comp="69" pin=0"/></net>

<net id="241"><net_src comp="145" pin="2"/><net_sink comp="238" pin=0"/></net>

<net id="242"><net_src comp="238" pin="1"/><net_sink comp="162" pin=0"/></net>

<net id="243"><net_src comp="238" pin="1"/><net_sink comp="179" pin=0"/></net>

<net id="247"><net_src comp="151" pin="2"/><net_sink comp="244" pin=0"/></net>

<net id="248"><net_src comp="244" pin="1"/><net_sink comp="157" pin=0"/></net>

<net id="249"><net_src comp="244" pin="1"/><net_sink comp="220" pin=0"/></net>

<net id="253"><net_src comp="44" pin="1"/><net_sink comp="250" pin=0"/></net>

<net id="254"><net_src comp="250" pin="1"/><net_sink comp="85" pin=0"/></net>

<net id="258"><net_src comp="157" pin="2"/><net_sink comp="255" pin=0"/></net>

<net id="259"><net_src comp="255" pin="1"/><net_sink comp="202" pin=1"/></net>

<net id="263"><net_src comp="167" pin="2"/><net_sink comp="260" pin=0"/></net>

<net id="264"><net_src comp="260" pin="1"/><net_sink comp="202" pin=0"/></net>

<net id="268"><net_src comp="196" pin="2"/><net_sink comp="265" pin=0"/></net>

<net id="269"><net_src comp="265" pin="1"/><net_sink comp="213" pin=0"/></net>

<net id="273"><net_src comp="85" pin="2"/><net_sink comp="270" pin=0"/></net>

<net id="274"><net_src comp="270" pin="1"/><net_sink comp="74" pin=0"/></net>

<net id="278"><net_src comp="38" pin="1"/><net_sink comp="275" pin=0"/></net>

<net id="279"><net_src comp="275" pin="1"/><net_sink comp="206" pin=1"/></net>

<net id="283"><net_src comp="80" pin="2"/><net_sink comp="280" pin=0"/></net>

<net id="284"><net_src comp="280" pin="1"/><net_sink comp="41" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: act_fun : vec | {1 }
  - Chain level:
	State 1
	State 2
		tmp : 1
		trunc_ln6 : 1
		icmp_ln6 : 2
		icmp_ln6_1 : 2
		or_ln6 : 3
		and_ln6 : 3
	State 3
	State 4
		and_ln8 : 1
		and_ln8_1 : 1
		xor_ln8 : 1
		and_ln10 : 1
		and_ln10_1 : 1
		and_ln10_2 : 1
		and_ln10_3 : 1
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
		select_ln10 : 1
		select_ln6 : 2
		ret_ln14 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------|---------|---------|---------|
| Operation|   Functional Unit   |  DSP48E |    FF   |   LUT   |
|----------|---------------------|---------|---------|---------|
|   dadd   |      grp_fu_74      |    3    |   509   |   817   |
|          |      grp_fu_80      |    3    |   509   |   817   |
|----------|---------------------|---------|---------|---------|
|          |      grp_fu_85      |    11   |   317   |   204   |
|   dmul   |      grp_fu_90      |    11   |   317   |   204   |
|          |      grp_fu_95      |    11   |   317   |   204   |
|----------|---------------------|---------|---------|---------|
|          |      grp_fu_48      |    0    |    66   |    70   |
|          |      grp_fu_54      |    0    |    66   |    70   |
|   fcmp   |      grp_fu_59      |    0    |    66   |    70   |
|          |      grp_fu_64      |    0    |    66   |    70   |
|          |      grp_fu_69      |    0    |    66   |    70   |
|----------|---------------------|---------|---------|---------|
|  fptrunc |      grp_fu_38      |    0    |   128   |   103   |
|          |      grp_fu_41      |    0    |   128   |   103   |
|----------|---------------------|---------|---------|---------|
|   fpext  |      grp_fu_44      |    0    |   100   |    54   |
|----------|---------------------|---------|---------|---------|
|          |  select_ln8_fu_206  |    0    |    0    |    32   |
|  select  |  select_ln10_fu_213 |    0    |    0    |    32   |
|          |  select_ln6_fu_220  |    0    |    0    |    32   |
|----------|---------------------|---------|---------|---------|
|   icmp   |   icmp_ln6_fu_133   |    0    |    0    |    11   |
|          |  icmp_ln6_1_fu_139  |    0    |    0    |    18   |
|----------|---------------------|---------|---------|---------|
|          |    and_ln6_fu_151   |    0    |    0    |    2    |
|          |    and_ln8_fu_162   |    0    |    0    |    2    |
|          |   and_ln8_1_fu_167  |    0    |    0    |    2    |
|    and   |   and_ln10_fu_179   |    0    |    0    |    2    |
|          |  and_ln10_1_fu_184  |    0    |    0    |    2    |
|          |  and_ln10_2_fu_190  |    0    |    0    |    2    |
|          |  and_ln10_3_fu_196  |    0    |    0    |    2    |
|          |   and_ln8_2_fu_202  |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|    xor   |    xor_ln6_fu_157   |    0    |    0    |    2    |
|          |    xor_ln8_fu_173   |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|    or    |    or_ln6_fu_145    |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|   read   | vec_read_read_fu_32 |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|partselect|      tmp_fu_119     |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   trunc  |   trunc_ln6_fu_129  |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   Total  |                     |    39   |   2655  |   3003  |
|----------|---------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+------------------+--------+
|                  |   FF   |
+------------------+--------+
|and_ln10_3_reg_265|    1   |
|  and_ln6_reg_244 |    1   |
| and_ln8_1_reg_260|    1   |
|  or_ln6_reg_238  |    1   |
|      reg_105     |   64   |
|      reg_110     |   64   |
|      reg_99      |   64   |
|  tmp_15_reg_250  |   64   |
|  tmp_16_reg_270  |   64   |
|  tmp_23_reg_280  |   64   |
|vec_assign_reg_275|   32   |
| vec_read_reg_227 |   32   |
|  xor_ln6_reg_255 |    1   |
+------------------+--------+
|       Total      |   453  |
+------------------+--------+

* Multiplexer (MUX) list: 
|-----------|------|------|------|--------||---------||---------|
|    Comp   |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------|------|------|------|--------||---------||---------|
| grp_fu_44 |  p0  |   2  |  32  |   64   ||    9    |
| grp_fu_48 |  p0  |   2  |  32  |   64   ||    9    |
| grp_fu_74 |  p1  |   2  |  64  |   128  |
|-----------|------|------|------|--------||---------||---------|
|   Total   |      |      |      |   256  ||  4.992  ||    18   |
|-----------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   39   |    -   |  2655  |  3003  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    4   |    -   |   18   |
|  Register |    -   |    -   |   453  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   39   |    4   |  3108  |  3021  |
+-----------+--------+--------+--------+--------+
