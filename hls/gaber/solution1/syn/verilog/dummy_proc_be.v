// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dummy_proc_be (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_r_dout,
        in_r_empty_n,
        in_r_read,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state21 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_r_dout;
input   in_r_empty_n;
output   in_r_read;
output  [8:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_r_read;
reg out_r_ce0;
reg out_r_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_r_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln25_reg_795;
reg   [9:0] i_0_reg_133;
reg   [9:0] i_0_reg_133_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] i_0_reg_133_pp0_iter2_reg;
reg   [9:0] i_0_reg_133_pp0_iter3_reg;
reg   [9:0] i_0_reg_133_pp0_iter4_reg;
reg   [9:0] i_0_reg_133_pp0_iter5_reg;
reg   [9:0] i_0_reg_133_pp0_iter6_reg;
reg   [9:0] i_0_reg_133_pp0_iter7_reg;
reg   [9:0] i_0_reg_133_pp0_iter8_reg;
reg   [9:0] i_0_reg_133_pp0_iter9_reg;
reg   [9:0] i_0_reg_133_pp0_iter10_reg;
reg   [9:0] i_0_reg_133_pp0_iter11_reg;
reg   [9:0] i_0_reg_133_pp0_iter12_reg;
reg   [9:0] i_0_reg_133_pp0_iter13_reg;
reg   [9:0] i_0_reg_133_pp0_iter14_reg;
reg   [9:0] i_0_reg_133_pp0_iter15_reg;
reg   [9:0] i_0_reg_133_pp0_iter16_reg;
reg   [9:0] i_0_reg_133_pp0_iter17_reg;
wire   [0:0] icmp_ln25_fu_162_p2;
reg   [0:0] icmp_ln25_reg_795_pp0_iter1_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter2_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter3_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter4_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter5_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter6_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter7_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter8_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter9_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter10_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter11_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter12_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter13_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter14_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter15_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter16_reg;
reg   [0:0] icmp_ln25_reg_795_pp0_iter17_reg;
wire   [9:0] i_fu_168_p2;
reg   [9:0] i_reg_799;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln935_fu_178_p2;
reg   [0:0] icmp_ln935_reg_804;
reg   [0:0] icmp_ln935_reg_804_pp0_iter2_reg;
reg   [0:0] icmp_ln935_reg_804_pp0_iter3_reg;
wire   [0:0] p_Result_16_fu_184_p3;
reg   [0:0] p_Result_16_reg_809;
reg   [0:0] p_Result_16_reg_809_pp0_iter2_reg;
reg   [0:0] p_Result_16_reg_809_pp0_iter3_reg;
wire   [15:0] tmp_V_7_fu_198_p3;
reg   [15:0] tmp_V_7_reg_814;
reg   [15:0] tmp_V_7_reg_814_pp0_iter2_reg;
reg   [15:0] p_Result_s_fu_206_p4;
reg   [15:0] p_Result_s_reg_822;
wire   [0:0] icmp_ln935_1_fu_226_p2;
reg   [0:0] icmp_ln935_1_reg_827;
reg   [0:0] icmp_ln935_1_reg_827_pp0_iter2_reg;
reg   [0:0] icmp_ln935_1_reg_827_pp0_iter3_reg;
wire   [0:0] p_Result_19_fu_232_p3;
reg   [0:0] p_Result_19_reg_832;
reg   [0:0] p_Result_19_reg_832_pp0_iter2_reg;
reg   [0:0] p_Result_19_reg_832_pp0_iter3_reg;
wire   [15:0] tmp_V_9_fu_246_p3;
reg   [15:0] tmp_V_9_reg_837;
reg   [15:0] tmp_V_9_reg_837_pp0_iter2_reg;
reg   [15:0] p_Result_11_fu_254_p4;
reg   [15:0] p_Result_11_reg_845;
wire   [31:0] sub_ln944_fu_279_p2;
reg   [31:0] sub_ln944_reg_850;
wire   [15:0] trunc_ln944_fu_285_p1;
reg   [15:0] trunc_ln944_reg_856;
wire   [31:0] lsb_index_fu_289_p2;
reg   [31:0] lsb_index_reg_861;
reg   [30:0] tmp_6_reg_867;
wire   [4:0] sub_ln947_fu_309_p2;
reg   [4:0] sub_ln947_reg_872;
wire   [7:0] trunc_ln943_fu_315_p1;
reg   [7:0] trunc_ln943_reg_877;
reg   [7:0] trunc_ln943_reg_877_pp0_iter3_reg;
wire   [31:0] sub_ln944_1_fu_334_p2;
reg   [31:0] sub_ln944_1_reg_882;
wire   [15:0] trunc_ln944_1_fu_340_p1;
reg   [15:0] trunc_ln944_1_reg_888;
wire   [31:0] lsb_index_1_fu_344_p2;
reg   [31:0] lsb_index_1_reg_893;
reg   [30:0] tmp_10_reg_899;
wire   [4:0] sub_ln947_1_fu_364_p2;
reg   [4:0] sub_ln947_1_reg_904;
wire   [7:0] trunc_ln943_1_fu_370_p1;
reg   [7:0] trunc_ln943_1_reg_909;
reg   [7:0] trunc_ln943_1_reg_909_pp0_iter3_reg;
reg   [62:0] m_s_reg_914;
reg   [0:0] tmp_8_reg_919;
reg   [62:0] m_3_reg_924;
reg   [0:0] tmp_12_reg_929;
wire   [31:0] re_fu_728_p3;
reg   [31:0] re_reg_934;
wire   [31:0] im_fu_783_p3;
reg   [31:0] im_reg_940;
wire   [31:0] grp_fu_149_p2;
reg   [31:0] tmp_reg_946;
wire   [31:0] grp_fu_153_p2;
reg   [31:0] tmp_s_reg_951;
wire   [31:0] grp_fu_145_p2;
reg   [31:0] tmp_14_reg_956;
wire   [31:0] grp_fu_157_p2;
reg   [31:0] tmp_15_reg_961;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg   [9:0] ap_phi_mux_i_0_phi_fu_137_p4;
wire   [63:0] zext_ln27_fu_790_p1;
wire   [15:0] tmp_V_6_fu_174_p1;
wire   [15:0] tmp_V_fu_192_p2;
wire   [15:0] tmp_V_8_fu_216_p4;
wire   [15:0] tmp_V_4_fu_240_p2;
wire   [31:0] p_Result_17_fu_264_p3;
reg   [31:0] l_fu_271_p3;
wire   [4:0] trunc_ln947_fu_305_p1;
wire   [31:0] p_Result_20_fu_319_p3;
reg   [31:0] l_1_fu_326_p3;
wire   [4:0] trunc_ln947_1_fu_360_p1;
wire   [15:0] zext_ln947_fu_379_p1;
wire   [15:0] lshr_ln947_fu_382_p2;
wire   [15:0] p_Result_7_fu_388_p2;
wire   [0:0] icmp_ln947_fu_374_p2;
wire   [0:0] icmp_ln947_1_fu_393_p2;
wire   [0:0] tmp_7_fu_405_p3;
wire   [15:0] add_ln949_fu_418_p2;
wire   [0:0] p_Result_8_fu_423_p3;
wire   [0:0] xor_ln949_fu_412_p2;
wire   [0:0] and_ln949_fu_430_p2;
wire   [0:0] a_fu_399_p2;
wire   [0:0] or_ln949_2_fu_436_p2;
wire   [31:0] zext_ln957_1_fu_453_p1;
wire   [31:0] add_ln958_fu_461_p2;
wire   [31:0] lshr_ln958_fu_466_p2;
wire   [31:0] sub_ln958_fu_476_p2;
wire   [63:0] m_fu_450_p1;
wire   [63:0] zext_ln958_1_fu_481_p1;
wire   [0:0] icmp_ln958_fu_456_p2;
wire   [63:0] zext_ln958_fu_472_p1;
wire   [63:0] shl_ln958_fu_485_p2;
wire   [31:0] or_ln_fu_442_p3;
wire   [63:0] zext_ln961_fu_499_p1;
wire   [63:0] m_1_fu_491_p3;
wire   [63:0] m_2_fu_503_p2;
wire   [15:0] zext_ln947_1_fu_532_p1;
wire   [15:0] lshr_ln947_1_fu_535_p2;
wire   [15:0] p_Result_13_fu_541_p2;
wire   [0:0] icmp_ln947_2_fu_527_p2;
wire   [0:0] icmp_ln947_3_fu_546_p2;
wire   [0:0] tmp_11_fu_558_p3;
wire   [15:0] add_ln949_1_fu_571_p2;
wire   [0:0] p_Result_14_fu_576_p3;
wire   [0:0] xor_ln949_1_fu_565_p2;
wire   [0:0] and_ln949_1_fu_583_p2;
wire   [0:0] a_1_fu_552_p2;
wire   [0:0] or_ln949_fu_589_p2;
wire   [31:0] zext_ln957_2_fu_606_p1;
wire   [31:0] add_ln958_1_fu_614_p2;
wire   [31:0] lshr_ln958_1_fu_619_p2;
wire   [31:0] sub_ln958_1_fu_629_p2;
wire   [63:0] m_9_fu_603_p1;
wire   [63:0] zext_ln958_3_fu_634_p1;
wire   [0:0] icmp_ln958_1_fu_609_p2;
wire   [63:0] zext_ln958_2_fu_625_p1;
wire   [63:0] shl_ln958_1_fu_638_p2;
wire   [31:0] or_ln949_1_fu_595_p3;
wire   [63:0] zext_ln961_1_fu_652_p1;
wire   [63:0] m_10_fu_644_p3;
wire   [63:0] m_12_fu_656_p2;
wire   [7:0] sub_ln964_fu_690_p2;
wire   [7:0] select_ln964_fu_683_p3;
wire   [7:0] add_ln964_fu_695_p2;
wire   [63:0] m_15_fu_680_p1;
wire   [8:0] tmp_20_fu_701_p3;
wire   [63:0] p_Result_18_fu_708_p5;
wire   [31:0] trunc_ln738_fu_720_p1;
wire   [31:0] bitcast_ln739_fu_724_p1;
wire   [7:0] sub_ln964_1_fu_745_p2;
wire   [7:0] select_ln964_1_fu_738_p3;
wire   [7:0] add_ln964_1_fu_750_p2;
wire   [63:0] m_16_fu_735_p1;
wire   [8:0] tmp_21_fu_756_p3;
wire   [63:0] p_Result_21_fu_763_p5;
wire   [31:0] trunc_ln738_1_fu_775_p1;
wire   [31:0] bitcast_ln739_1_fu_779_p1;
reg    grp_fu_145_ce;
reg    grp_fu_149_ce;
reg    grp_fu_153_ce;
reg    grp_fu_157_ce;
wire    ap_CS_fsm_state21;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

kernel_fadd_32ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_fadd_32ns_eOg_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_946),
    .din1(tmp_s_reg_951),
    .ce(grp_fu_145_ce),
    .dout(grp_fu_145_p2)
);

kernel_fmul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_fmul_32ns_bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(re_reg_934),
    .din1(re_reg_934),
    .ce(grp_fu_149_ce),
    .dout(grp_fu_149_p2)
);

kernel_fmul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_fmul_32ns_bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(im_reg_940),
    .din1(im_reg_940),
    .ce(grp_fu_153_ce),
    .dout(grp_fu_153_p2)
);

kernel_fmul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_fmul_32ns_bkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_reg_956),
    .din1(32'd1216348160),
    .ce(grp_fu_157_ce),
    .dout(grp_fu_157_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_133 <= i_reg_799;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_133 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_0_reg_133_pp0_iter10_reg <= i_0_reg_133_pp0_iter9_reg;
        i_0_reg_133_pp0_iter11_reg <= i_0_reg_133_pp0_iter10_reg;
        i_0_reg_133_pp0_iter12_reg <= i_0_reg_133_pp0_iter11_reg;
        i_0_reg_133_pp0_iter13_reg <= i_0_reg_133_pp0_iter12_reg;
        i_0_reg_133_pp0_iter14_reg <= i_0_reg_133_pp0_iter13_reg;
        i_0_reg_133_pp0_iter15_reg <= i_0_reg_133_pp0_iter14_reg;
        i_0_reg_133_pp0_iter16_reg <= i_0_reg_133_pp0_iter15_reg;
        i_0_reg_133_pp0_iter17_reg <= i_0_reg_133_pp0_iter16_reg;
        i_0_reg_133_pp0_iter2_reg <= i_0_reg_133_pp0_iter1_reg;
        i_0_reg_133_pp0_iter3_reg <= i_0_reg_133_pp0_iter2_reg;
        i_0_reg_133_pp0_iter4_reg <= i_0_reg_133_pp0_iter3_reg;
        i_0_reg_133_pp0_iter5_reg <= i_0_reg_133_pp0_iter4_reg;
        i_0_reg_133_pp0_iter6_reg <= i_0_reg_133_pp0_iter5_reg;
        i_0_reg_133_pp0_iter7_reg <= i_0_reg_133_pp0_iter6_reg;
        i_0_reg_133_pp0_iter8_reg <= i_0_reg_133_pp0_iter7_reg;
        i_0_reg_133_pp0_iter9_reg <= i_0_reg_133_pp0_iter8_reg;
        icmp_ln25_reg_795_pp0_iter10_reg <= icmp_ln25_reg_795_pp0_iter9_reg;
        icmp_ln25_reg_795_pp0_iter11_reg <= icmp_ln25_reg_795_pp0_iter10_reg;
        icmp_ln25_reg_795_pp0_iter12_reg <= icmp_ln25_reg_795_pp0_iter11_reg;
        icmp_ln25_reg_795_pp0_iter13_reg <= icmp_ln25_reg_795_pp0_iter12_reg;
        icmp_ln25_reg_795_pp0_iter14_reg <= icmp_ln25_reg_795_pp0_iter13_reg;
        icmp_ln25_reg_795_pp0_iter15_reg <= icmp_ln25_reg_795_pp0_iter14_reg;
        icmp_ln25_reg_795_pp0_iter16_reg <= icmp_ln25_reg_795_pp0_iter15_reg;
        icmp_ln25_reg_795_pp0_iter17_reg <= icmp_ln25_reg_795_pp0_iter16_reg;
        icmp_ln25_reg_795_pp0_iter2_reg <= icmp_ln25_reg_795_pp0_iter1_reg;
        icmp_ln25_reg_795_pp0_iter3_reg <= icmp_ln25_reg_795_pp0_iter2_reg;
        icmp_ln25_reg_795_pp0_iter4_reg <= icmp_ln25_reg_795_pp0_iter3_reg;
        icmp_ln25_reg_795_pp0_iter5_reg <= icmp_ln25_reg_795_pp0_iter4_reg;
        icmp_ln25_reg_795_pp0_iter6_reg <= icmp_ln25_reg_795_pp0_iter5_reg;
        icmp_ln25_reg_795_pp0_iter7_reg <= icmp_ln25_reg_795_pp0_iter6_reg;
        icmp_ln25_reg_795_pp0_iter8_reg <= icmp_ln25_reg_795_pp0_iter7_reg;
        icmp_ln25_reg_795_pp0_iter9_reg <= icmp_ln25_reg_795_pp0_iter8_reg;
        icmp_ln935_1_reg_827_pp0_iter2_reg <= icmp_ln935_1_reg_827;
        icmp_ln935_1_reg_827_pp0_iter3_reg <= icmp_ln935_1_reg_827_pp0_iter2_reg;
        icmp_ln935_reg_804_pp0_iter2_reg <= icmp_ln935_reg_804;
        icmp_ln935_reg_804_pp0_iter3_reg <= icmp_ln935_reg_804_pp0_iter2_reg;
        p_Result_16_reg_809_pp0_iter2_reg <= p_Result_16_reg_809;
        p_Result_16_reg_809_pp0_iter3_reg <= p_Result_16_reg_809_pp0_iter2_reg;
        p_Result_19_reg_832_pp0_iter2_reg <= p_Result_19_reg_832;
        p_Result_19_reg_832_pp0_iter3_reg <= p_Result_19_reg_832_pp0_iter2_reg;
        tmp_V_7_reg_814_pp0_iter2_reg <= tmp_V_7_reg_814;
        tmp_V_9_reg_837_pp0_iter2_reg <= tmp_V_9_reg_837;
        trunc_ln943_1_reg_909_pp0_iter3_reg <= trunc_ln943_1_reg_909;
        trunc_ln943_reg_877_pp0_iter3_reg <= trunc_ln943_reg_877;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_133_pp0_iter1_reg <= i_0_reg_133;
        icmp_ln25_reg_795 <= icmp_ln25_fu_162_p2;
        icmp_ln25_reg_795_pp0_iter1_reg <= icmp_ln25_reg_795;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_799 <= i_fu_168_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln935_1_reg_827 <= icmp_ln935_1_fu_226_p2;
        icmp_ln935_reg_804 <= icmp_ln935_fu_178_p2;
        p_Result_11_reg_845 <= p_Result_11_fu_254_p4;
        p_Result_16_reg_809 <= in_r_dout[32'd15];
        p_Result_19_reg_832 <= in_r_dout[32'd31];
        p_Result_s_reg_822 <= p_Result_s_fu_206_p4;
        tmp_V_7_reg_814 <= tmp_V_7_fu_198_p3;
        tmp_V_9_reg_837 <= tmp_V_9_fu_246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795_pp0_iter3_reg == 1'd0))) begin
        im_reg_940 <= im_fu_783_p3;
        re_reg_934 <= re_fu_728_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_1_reg_827 == 1'd0) & (icmp_ln25_reg_795_pp0_iter1_reg == 1'd0))) begin
        lsb_index_1_reg_893 <= lsb_index_1_fu_344_p2;
        sub_ln944_1_reg_882 <= sub_ln944_1_fu_334_p2;
        sub_ln947_1_reg_904 <= sub_ln947_1_fu_364_p2;
        tmp_10_reg_899 <= {{lsb_index_1_fu_344_p2[31:1]}};
        trunc_ln943_1_reg_909 <= trunc_ln943_1_fu_370_p1;
        trunc_ln944_1_reg_888 <= trunc_ln944_1_fu_340_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_reg_804 == 1'd0) & (icmp_ln25_reg_795_pp0_iter1_reg == 1'd0))) begin
        lsb_index_reg_861 <= lsb_index_fu_289_p2;
        sub_ln944_reg_850 <= sub_ln944_fu_279_p2;
        sub_ln947_reg_872 <= sub_ln947_fu_309_p2;
        tmp_6_reg_867 <= {{lsb_index_fu_289_p2[31:1]}};
        trunc_ln943_reg_877 <= trunc_ln943_fu_315_p1;
        trunc_ln944_reg_856 <= trunc_ln944_fu_285_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_1_reg_827_pp0_iter2_reg == 1'd0) & (icmp_ln25_reg_795_pp0_iter2_reg == 1'd0))) begin
        m_3_reg_924 <= {{m_12_fu_656_p2[63:1]}};
        tmp_12_reg_929 <= m_12_fu_656_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_reg_804_pp0_iter2_reg == 1'd0) & (icmp_ln25_reg_795_pp0_iter2_reg == 1'd0))) begin
        m_s_reg_914 <= {{m_2_fu_503_p2[63:1]}};
        tmp_8_reg_919 <= m_2_fu_503_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795_pp0_iter12_reg == 1'd0))) begin
        tmp_14_reg_956 <= grp_fu_145_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795_pp0_iter16_reg == 1'd0))) begin
        tmp_15_reg_961 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795_pp0_iter7_reg == 1'd0))) begin
        tmp_reg_946 <= grp_fu_149_p2;
        tmp_s_reg_951 <= grp_fu_153_p2;
    end
end

always @ (*) begin
    if ((icmp_ln25_fu_162_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_137_p4 = i_reg_799;
    end else begin
        ap_phi_mux_i_0_phi_fu_137_p4 = i_0_reg_133;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_145_ce = 1'b1;
    end else begin
        grp_fu_145_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_149_ce = 1'b1;
    end else begin
        grp_fu_149_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_153_ce = 1'b1;
    end else begin
        grp_fu_153_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_157_ce = 1'b1;
    end else begin
        grp_fu_157_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_795 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_blk_n = in_r_empty_n;
    end else begin
        in_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_read = 1'b1;
    end else begin
        in_r_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_reg_795_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln25_fu_162_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((icmp_ln25_fu_162_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_fu_552_p2 = (icmp_ln947_3_fu_546_p2 & icmp_ln947_2_fu_527_p2);

assign a_fu_399_p2 = (icmp_ln947_fu_374_p2 & icmp_ln947_1_fu_393_p2);

assign add_ln949_1_fu_571_p2 = ($signed(16'd65512) + $signed(trunc_ln944_1_reg_888));

assign add_ln949_fu_418_p2 = ($signed(16'd65512) + $signed(trunc_ln944_reg_856));

assign add_ln958_1_fu_614_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_1_reg_882));

assign add_ln958_fu_461_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_850));

assign add_ln964_1_fu_750_p2 = (sub_ln964_1_fu_745_p2 + select_ln964_1_fu_738_p3);

assign add_ln964_fu_695_p2 = (sub_ln964_fu_690_p2 + select_ln964_fu_683_p3);

assign and_ln949_1_fu_583_p2 = (xor_ln949_1_fu_565_p2 & p_Result_14_fu_576_p3);

assign and_ln949_fu_430_p2 = (xor_ln949_fu_412_p2 & p_Result_8_fu_423_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln25_reg_795 == 1'd0) & (in_r_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln25_reg_795 == 1'd0) & (in_r_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln25_reg_795 == 1'd0) & (in_r_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln739_1_fu_779_p1 = trunc_ln738_1_fu_775_p1;

assign bitcast_ln739_fu_724_p1 = trunc_ln738_fu_720_p1;

assign i_fu_168_p2 = (ap_phi_mux_i_0_phi_fu_137_p4 + 10'd1);

assign icmp_ln25_fu_162_p2 = ((ap_phi_mux_i_0_phi_fu_137_p4 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_226_p2 = ((tmp_V_8_fu_216_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_178_p2 = ((tmp_V_6_fu_174_p1 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_393_p2 = ((p_Result_7_fu_388_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_2_fu_527_p2 = (($signed(tmp_10_reg_899) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln947_3_fu_546_p2 = ((p_Result_13_fu_541_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_374_p2 = (($signed(tmp_6_reg_867) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_609_p2 = (($signed(lsb_index_1_reg_893) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_456_p2 = (($signed(lsb_index_reg_861) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign im_fu_783_p3 = ((icmp_ln935_1_reg_827_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_1_fu_779_p1);


always @ (p_Result_20_fu_319_p3) begin
    if (p_Result_20_fu_319_p3[0] == 1'b1) begin
        l_1_fu_326_p3 = 32'd0;
    end else if (p_Result_20_fu_319_p3[1] == 1'b1) begin
        l_1_fu_326_p3 = 32'd1;
    end else if (p_Result_20_fu_319_p3[2] == 1'b1) begin
        l_1_fu_326_p3 = 32'd2;
    end else if (p_Result_20_fu_319_p3[3] == 1'b1) begin
        l_1_fu_326_p3 = 32'd3;
    end else if (p_Result_20_fu_319_p3[4] == 1'b1) begin
        l_1_fu_326_p3 = 32'd4;
    end else if (p_Result_20_fu_319_p3[5] == 1'b1) begin
        l_1_fu_326_p3 = 32'd5;
    end else if (p_Result_20_fu_319_p3[6] == 1'b1) begin
        l_1_fu_326_p3 = 32'd6;
    end else if (p_Result_20_fu_319_p3[7] == 1'b1) begin
        l_1_fu_326_p3 = 32'd7;
    end else if (p_Result_20_fu_319_p3[8] == 1'b1) begin
        l_1_fu_326_p3 = 32'd8;
    end else if (p_Result_20_fu_319_p3[9] == 1'b1) begin
        l_1_fu_326_p3 = 32'd9;
    end else if (p_Result_20_fu_319_p3[10] == 1'b1) begin
        l_1_fu_326_p3 = 32'd10;
    end else if (p_Result_20_fu_319_p3[11] == 1'b1) begin
        l_1_fu_326_p3 = 32'd11;
    end else if (p_Result_20_fu_319_p3[12] == 1'b1) begin
        l_1_fu_326_p3 = 32'd12;
    end else if (p_Result_20_fu_319_p3[13] == 1'b1) begin
        l_1_fu_326_p3 = 32'd13;
    end else if (p_Result_20_fu_319_p3[14] == 1'b1) begin
        l_1_fu_326_p3 = 32'd14;
    end else if (p_Result_20_fu_319_p3[15] == 1'b1) begin
        l_1_fu_326_p3 = 32'd15;
    end else if (p_Result_20_fu_319_p3[16] == 1'b1) begin
        l_1_fu_326_p3 = 32'd16;
    end else if (p_Result_20_fu_319_p3[17] == 1'b1) begin
        l_1_fu_326_p3 = 32'd17;
    end else if (p_Result_20_fu_319_p3[18] == 1'b1) begin
        l_1_fu_326_p3 = 32'd18;
    end else if (p_Result_20_fu_319_p3[19] == 1'b1) begin
        l_1_fu_326_p3 = 32'd19;
    end else if (p_Result_20_fu_319_p3[20] == 1'b1) begin
        l_1_fu_326_p3 = 32'd20;
    end else if (p_Result_20_fu_319_p3[21] == 1'b1) begin
        l_1_fu_326_p3 = 32'd21;
    end else if (p_Result_20_fu_319_p3[22] == 1'b1) begin
        l_1_fu_326_p3 = 32'd22;
    end else if (p_Result_20_fu_319_p3[23] == 1'b1) begin
        l_1_fu_326_p3 = 32'd23;
    end else if (p_Result_20_fu_319_p3[24] == 1'b1) begin
        l_1_fu_326_p3 = 32'd24;
    end else if (p_Result_20_fu_319_p3[25] == 1'b1) begin
        l_1_fu_326_p3 = 32'd25;
    end else if (p_Result_20_fu_319_p3[26] == 1'b1) begin
        l_1_fu_326_p3 = 32'd26;
    end else if (p_Result_20_fu_319_p3[27] == 1'b1) begin
        l_1_fu_326_p3 = 32'd27;
    end else if (p_Result_20_fu_319_p3[28] == 1'b1) begin
        l_1_fu_326_p3 = 32'd28;
    end else if (p_Result_20_fu_319_p3[29] == 1'b1) begin
        l_1_fu_326_p3 = 32'd29;
    end else if (p_Result_20_fu_319_p3[30] == 1'b1) begin
        l_1_fu_326_p3 = 32'd30;
    end else if (p_Result_20_fu_319_p3[31] == 1'b1) begin
        l_1_fu_326_p3 = 32'd31;
    end else begin
        l_1_fu_326_p3 = 32'd32;
    end
end


always @ (p_Result_17_fu_264_p3) begin
    if (p_Result_17_fu_264_p3[0] == 1'b1) begin
        l_fu_271_p3 = 32'd0;
    end else if (p_Result_17_fu_264_p3[1] == 1'b1) begin
        l_fu_271_p3 = 32'd1;
    end else if (p_Result_17_fu_264_p3[2] == 1'b1) begin
        l_fu_271_p3 = 32'd2;
    end else if (p_Result_17_fu_264_p3[3] == 1'b1) begin
        l_fu_271_p3 = 32'd3;
    end else if (p_Result_17_fu_264_p3[4] == 1'b1) begin
        l_fu_271_p3 = 32'd4;
    end else if (p_Result_17_fu_264_p3[5] == 1'b1) begin
        l_fu_271_p3 = 32'd5;
    end else if (p_Result_17_fu_264_p3[6] == 1'b1) begin
        l_fu_271_p3 = 32'd6;
    end else if (p_Result_17_fu_264_p3[7] == 1'b1) begin
        l_fu_271_p3 = 32'd7;
    end else if (p_Result_17_fu_264_p3[8] == 1'b1) begin
        l_fu_271_p3 = 32'd8;
    end else if (p_Result_17_fu_264_p3[9] == 1'b1) begin
        l_fu_271_p3 = 32'd9;
    end else if (p_Result_17_fu_264_p3[10] == 1'b1) begin
        l_fu_271_p3 = 32'd10;
    end else if (p_Result_17_fu_264_p3[11] == 1'b1) begin
        l_fu_271_p3 = 32'd11;
    end else if (p_Result_17_fu_264_p3[12] == 1'b1) begin
        l_fu_271_p3 = 32'd12;
    end else if (p_Result_17_fu_264_p3[13] == 1'b1) begin
        l_fu_271_p3 = 32'd13;
    end else if (p_Result_17_fu_264_p3[14] == 1'b1) begin
        l_fu_271_p3 = 32'd14;
    end else if (p_Result_17_fu_264_p3[15] == 1'b1) begin
        l_fu_271_p3 = 32'd15;
    end else if (p_Result_17_fu_264_p3[16] == 1'b1) begin
        l_fu_271_p3 = 32'd16;
    end else if (p_Result_17_fu_264_p3[17] == 1'b1) begin
        l_fu_271_p3 = 32'd17;
    end else if (p_Result_17_fu_264_p3[18] == 1'b1) begin
        l_fu_271_p3 = 32'd18;
    end else if (p_Result_17_fu_264_p3[19] == 1'b1) begin
        l_fu_271_p3 = 32'd19;
    end else if (p_Result_17_fu_264_p3[20] == 1'b1) begin
        l_fu_271_p3 = 32'd20;
    end else if (p_Result_17_fu_264_p3[21] == 1'b1) begin
        l_fu_271_p3 = 32'd21;
    end else if (p_Result_17_fu_264_p3[22] == 1'b1) begin
        l_fu_271_p3 = 32'd22;
    end else if (p_Result_17_fu_264_p3[23] == 1'b1) begin
        l_fu_271_p3 = 32'd23;
    end else if (p_Result_17_fu_264_p3[24] == 1'b1) begin
        l_fu_271_p3 = 32'd24;
    end else if (p_Result_17_fu_264_p3[25] == 1'b1) begin
        l_fu_271_p3 = 32'd25;
    end else if (p_Result_17_fu_264_p3[26] == 1'b1) begin
        l_fu_271_p3 = 32'd26;
    end else if (p_Result_17_fu_264_p3[27] == 1'b1) begin
        l_fu_271_p3 = 32'd27;
    end else if (p_Result_17_fu_264_p3[28] == 1'b1) begin
        l_fu_271_p3 = 32'd28;
    end else if (p_Result_17_fu_264_p3[29] == 1'b1) begin
        l_fu_271_p3 = 32'd29;
    end else if (p_Result_17_fu_264_p3[30] == 1'b1) begin
        l_fu_271_p3 = 32'd30;
    end else if (p_Result_17_fu_264_p3[31] == 1'b1) begin
        l_fu_271_p3 = 32'd31;
    end else begin
        l_fu_271_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_344_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_1_fu_334_p2));

assign lsb_index_fu_289_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_279_p2));

assign lshr_ln947_1_fu_535_p2 = 16'd65535 >> zext_ln947_1_fu_532_p1;

assign lshr_ln947_fu_382_p2 = 16'd65535 >> zext_ln947_fu_379_p1;

assign lshr_ln958_1_fu_619_p2 = zext_ln957_2_fu_606_p1 >> add_ln958_1_fu_614_p2;

assign lshr_ln958_fu_466_p2 = zext_ln957_1_fu_453_p1 >> add_ln958_fu_461_p2;

assign m_10_fu_644_p3 = ((icmp_ln958_1_fu_609_p2[0:0] === 1'b1) ? zext_ln958_2_fu_625_p1 : shl_ln958_1_fu_638_p2);

assign m_12_fu_656_p2 = (zext_ln961_1_fu_652_p1 + m_10_fu_644_p3);

assign m_15_fu_680_p1 = m_s_reg_914;

assign m_16_fu_735_p1 = m_3_reg_924;

assign m_1_fu_491_p3 = ((icmp_ln958_fu_456_p2[0:0] === 1'b1) ? zext_ln958_fu_472_p1 : shl_ln958_fu_485_p2);

assign m_2_fu_503_p2 = (zext_ln961_fu_499_p1 + m_1_fu_491_p3);

assign m_9_fu_603_p1 = tmp_V_9_reg_837_pp0_iter2_reg;

assign m_fu_450_p1 = tmp_V_7_reg_814_pp0_iter2_reg;

assign or_ln949_1_fu_595_p3 = {{31'd0}, {or_ln949_fu_589_p2}};

assign or_ln949_2_fu_436_p2 = (and_ln949_fu_430_p2 | a_fu_399_p2);

assign or_ln949_fu_589_p2 = (and_ln949_1_fu_583_p2 | a_1_fu_552_p2);

assign or_ln_fu_442_p3 = {{31'd0}, {or_ln949_2_fu_436_p2}};

assign out_r_address0 = zext_ln27_fu_790_p1;

assign out_r_d0 = tmp_15_reg_961;

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_246_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_11_fu_254_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_11_fu_254_p4[ap_tvar_int_0] = tmp_V_9_fu_246_p3[15 - ap_tvar_int_0];
        end
    end
end

assign p_Result_13_fu_541_p2 = (tmp_V_9_reg_837_pp0_iter2_reg & lshr_ln947_1_fu_535_p2);

assign p_Result_14_fu_576_p3 = tmp_V_9_reg_837_pp0_iter2_reg[add_ln949_1_fu_571_p2];

assign p_Result_16_fu_184_p3 = in_r_dout[32'd15];

assign p_Result_17_fu_264_p3 = {{16'd65535}, {p_Result_s_reg_822}};

assign p_Result_18_fu_708_p5 = {{m_15_fu_680_p1[63:32]}, {tmp_20_fu_701_p3}, {m_15_fu_680_p1[22:0]}};

assign p_Result_19_fu_232_p3 = in_r_dout[32'd31];

assign p_Result_20_fu_319_p3 = {{16'd65535}, {p_Result_11_reg_845}};

assign p_Result_21_fu_763_p5 = {{m_16_fu_735_p1[63:32]}, {tmp_21_fu_756_p3}, {m_16_fu_735_p1[22:0]}};

assign p_Result_7_fu_388_p2 = (tmp_V_7_reg_814_pp0_iter2_reg & lshr_ln947_fu_382_p2);

assign p_Result_8_fu_423_p3 = tmp_V_7_reg_814_pp0_iter2_reg[add_ln949_fu_418_p2];

integer ap_tvar_int_1;

always @ (tmp_V_7_fu_198_p3) begin
    for (ap_tvar_int_1 = 16 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 15 - 0) begin
            p_Result_s_fu_206_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_206_p4[ap_tvar_int_1] = tmp_V_7_fu_198_p3[15 - ap_tvar_int_1];
        end
    end
end

assign re_fu_728_p3 = ((icmp_ln935_reg_804_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_724_p1);

assign select_ln964_1_fu_738_p3 = ((tmp_12_reg_929[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign select_ln964_fu_683_p3 = ((tmp_8_reg_919[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign shl_ln958_1_fu_638_p2 = m_9_fu_603_p1 << zext_ln958_3_fu_634_p1;

assign shl_ln958_fu_485_p2 = m_fu_450_p1 << zext_ln958_1_fu_481_p1;

assign sub_ln944_1_fu_334_p2 = (32'd16 - l_1_fu_326_p3);

assign sub_ln944_fu_279_p2 = (32'd16 - l_fu_271_p3);

assign sub_ln947_1_fu_364_p2 = (5'd9 - trunc_ln947_1_fu_360_p1);

assign sub_ln947_fu_309_p2 = (5'd9 - trunc_ln947_fu_305_p1);

assign sub_ln958_1_fu_629_p2 = (32'd25 - sub_ln944_1_reg_882);

assign sub_ln958_fu_476_p2 = (32'd25 - sub_ln944_reg_850);

assign sub_ln964_1_fu_745_p2 = (8'd1 - trunc_ln943_1_reg_909_pp0_iter3_reg);

assign sub_ln964_fu_690_p2 = (8'd1 - trunc_ln943_reg_877_pp0_iter3_reg);

assign tmp_11_fu_558_p3 = lsb_index_1_reg_893[32'd31];

assign tmp_20_fu_701_p3 = {{p_Result_16_reg_809_pp0_iter3_reg}, {add_ln964_fu_695_p2}};

assign tmp_21_fu_756_p3 = {{p_Result_19_reg_832_pp0_iter3_reg}, {add_ln964_1_fu_750_p2}};

assign tmp_7_fu_405_p3 = lsb_index_reg_861[32'd31];

assign tmp_V_4_fu_240_p2 = (16'd0 - tmp_V_8_fu_216_p4);

assign tmp_V_6_fu_174_p1 = in_r_dout[15:0];

assign tmp_V_7_fu_198_p3 = ((p_Result_16_fu_184_p3[0:0] === 1'b1) ? tmp_V_fu_192_p2 : tmp_V_6_fu_174_p1);

assign tmp_V_8_fu_216_p4 = {{in_r_dout[31:16]}};

assign tmp_V_9_fu_246_p3 = ((p_Result_19_fu_232_p3[0:0] === 1'b1) ? tmp_V_4_fu_240_p2 : tmp_V_8_fu_216_p4);

assign tmp_V_fu_192_p2 = (16'd0 - tmp_V_6_fu_174_p1);

assign trunc_ln738_1_fu_775_p1 = p_Result_21_fu_763_p5[31:0];

assign trunc_ln738_fu_720_p1 = p_Result_18_fu_708_p5[31:0];

assign trunc_ln943_1_fu_370_p1 = l_1_fu_326_p3[7:0];

assign trunc_ln943_fu_315_p1 = l_fu_271_p3[7:0];

assign trunc_ln944_1_fu_340_p1 = sub_ln944_1_fu_334_p2[15:0];

assign trunc_ln944_fu_285_p1 = sub_ln944_fu_279_p2[15:0];

assign trunc_ln947_1_fu_360_p1 = sub_ln944_1_fu_334_p2[4:0];

assign trunc_ln947_fu_305_p1 = sub_ln944_fu_279_p2[4:0];

assign xor_ln949_1_fu_565_p2 = (tmp_11_fu_558_p3 ^ 1'd1);

assign xor_ln949_fu_412_p2 = (tmp_7_fu_405_p3 ^ 1'd1);

assign zext_ln27_fu_790_p1 = i_0_reg_133_pp0_iter17_reg;

assign zext_ln947_1_fu_532_p1 = sub_ln947_1_reg_904;

assign zext_ln947_fu_379_p1 = sub_ln947_reg_872;

assign zext_ln957_1_fu_453_p1 = tmp_V_7_reg_814_pp0_iter2_reg;

assign zext_ln957_2_fu_606_p1 = tmp_V_9_reg_837_pp0_iter2_reg;

assign zext_ln958_1_fu_481_p1 = sub_ln958_fu_476_p2;

assign zext_ln958_2_fu_625_p1 = lshr_ln958_1_fu_619_p2;

assign zext_ln958_3_fu_634_p1 = sub_ln958_1_fu_629_p2;

assign zext_ln958_fu_472_p1 = lshr_ln958_fu_466_p2;

assign zext_ln961_1_fu_652_p1 = or_ln949_1_fu_595_p3;

assign zext_ln961_fu_499_p1 = or_ln_fu_442_p3;

endmodule //dummy_proc_be
