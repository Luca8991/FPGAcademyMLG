// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dummy_proc_fe.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dummy_proc_fe::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dummy_proc_fe::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> dummy_proc_fe::ap_ST_fsm_state1 = "1";
const sc_lv<3> dummy_proc_fe::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> dummy_proc_fe::ap_ST_fsm_state18 = "100";
const bool dummy_proc_fe::ap_const_boolean_1 = true;
const sc_lv<32> dummy_proc_fe::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_1 = "1";
const bool dummy_proc_fe::ap_const_boolean_0 = false;
const sc_lv<1> dummy_proc_fe::ap_const_lv1_0 = "0";
const sc_lv<1> dummy_proc_fe::ap_const_lv1_1 = "1";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_0 = "000000000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_3B000000 = "111011000000000000000000000000";
const sc_lv<13> dummy_proc_fe::ap_const_lv13_557 = "10101010111";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_C = "1100";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_800 = "100000000000";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_1 = "1";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_3F = "111111";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_34 = "110100";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_3E = "111110";
const sc_lv<54> dummy_proc_fe::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<63> dummy_proc_fe::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_433 = "10000110011";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_4 = "100";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_B = "1011";
const sc_lv<8> dummy_proc_fe::ap_const_lv8_0 = "00000000";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_FF1 = "111111110001";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_F = "1111";
const sc_lv<12> dummy_proc_fe::ap_const_lv12_36 = "110110";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_1F = "11111";
const sc_lv<16> dummy_proc_fe::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> dummy_proc_fe::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> dummy_proc_fe::ap_const_lv32_2 = "10";

dummy_proc_fe::dummy_proc_fe(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_fmul_32ns_bkb_U1 = new kernel_fmul_32ns_bkb<1,4,32,32,32>("kernel_fmul_32ns_bkb_U1");
    kernel_fmul_32ns_bkb_U1->clk(ap_clk);
    kernel_fmul_32ns_bkb_U1->reset(ap_rst);
    kernel_fmul_32ns_bkb_U1->din0(tmp_reg_523);
    kernel_fmul_32ns_bkb_U1->din1(ap_var_for_const0);
    kernel_fmul_32ns_bkb_U1->ce(grp_fu_165_ce);
    kernel_fmul_32ns_bkb_U1->dout(grp_fu_165_p2);
    kernel_sitofp_32scud_U2 = new kernel_sitofp_32scud<1,6,32,32>("kernel_sitofp_32scud_U2");
    kernel_sitofp_32scud_U2->clk(ap_clk);
    kernel_sitofp_32scud_U2->reset(ap_rst);
    kernel_sitofp_32scud_U2->din0(grp_fu_170_p0);
    kernel_sitofp_32scud_U2->ce(grp_fu_170_ce);
    kernel_sitofp_32scud_U2->dout(grp_fu_170_p1);
    kernel_fpext_32nsdEe_U3 = new kernel_fpext_32nsdEe<1,2,32,64>("kernel_fpext_32nsdEe_U3");
    kernel_fpext_32nsdEe_U3->clk(ap_clk);
    kernel_fpext_32nsdEe_U3->reset(ap_rst);
    kernel_fpext_32nsdEe_U3->din0(v_assign_reg_528);
    kernel_fpext_32nsdEe_U3->ce(grp_fu_173_ce);
    kernel_fpext_32nsdEe_U3->dout(grp_fu_173_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F2_fu_263_p2);
    sensitive << ( zext_ln461_fu_231_p1 );

    SC_METHOD(thread_add_ln581_fu_285_p2);
    sensitive << ( F2_fu_263_p2 );

    SC_METHOD(thread_and_ln581_fu_406_p2);
    sensitive << ( icmp_ln581_reg_555 );
    sensitive << ( xor_ln582_fu_400_p2 );

    SC_METHOD(thread_and_ln582_fu_391_p2);
    sensitive << ( icmp_ln582_reg_572 );
    sensitive << ( xor_ln571_fu_386_p2 );

    SC_METHOD(thread_and_ln585_1_fu_423_p2);
    sensitive << ( icmp_ln585_fu_325_p2 );
    sensitive << ( and_ln581_fu_406_p2 );

    SC_METHOD(thread_and_ln585_fu_417_p2);
    sensitive << ( and_ln581_fu_406_p2 );
    sensitive << ( xor_ln585_fu_411_p2 );

    SC_METHOD(thread_and_ln603_fu_440_p2);
    sensitive << ( icmp_ln603_fu_341_p2 );
    sensitive << ( xor_ln581_fu_434_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_r_empty_n );
    sensitive << ( out_r_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln13_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_r_empty_n );
    sensitive << ( out_r_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln13_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_r_empty_n );
    sensitive << ( out_r_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln13_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( config_data_V_empty_n );
    sensitive << ( config_data_V_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);
    sensitive << ( out_r_full_n );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_r_empty_n );
    sensitive << ( icmp_ln13_reg_504 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln13_fu_189_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ashr_ln586_fu_351_p2);
    sensitive << ( man_V_2_fu_303_p3 );
    sensitive << ( zext_ln586_fu_347_p1 );

    SC_METHOD(thread_bitcast_ln696_fu_361_p1);
    sensitive << ( v_assign_reg_528_pp0_iter13_reg );

    SC_METHOD(thread_config_data_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_dout );
    sensitive << ( config_data_V_empty_n );
    sensitive << ( config_data_V_full_n );

    SC_METHOD(thread_config_data_V_i_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_empty_n );

    SC_METHOD(thread_config_data_V_o_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_full_n );

    SC_METHOD(thread_config_data_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_empty_n );
    sensitive << ( config_data_V_full_n );

    SC_METHOD(thread_config_data_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_empty_n );
    sensitive << ( config_data_V_full_n );

    SC_METHOD(thread_exp_tmp_V_fu_221_p4);
    sensitive << ( ireg_V_fu_205_p1 );

    SC_METHOD(thread_grp_fu_165_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_170_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_170_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( in_read_reg_513 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_173_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_195_p2);
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_icmp_ln13_fu_189_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_154 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln571_fu_257_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter12_reg );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( trunc_ln556_fu_209_p1 );

    SC_METHOD(thread_icmp_ln581_fu_279_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter12_reg );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( tmp_2_fu_269_p4 );

    SC_METHOD(thread_icmp_ln582_fu_297_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter12_reg );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( F2_fu_263_p2 );

    SC_METHOD(thread_icmp_ln585_fu_325_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter13_reg );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( sh_amt_fu_308_p3 );

    SC_METHOD(thread_icmp_ln603_fu_341_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter13_reg );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( tmp_3_fu_331_p4 );

    SC_METHOD(thread_in_r_blk_n);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln13_reg_504 );

    SC_METHOD(thread_in_r_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln13_reg_504 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ireg_V_fu_205_p1);
    sensitive << ( grp_fu_173_p1 );

    SC_METHOD(thread_man_V_1_fu_251_p2);
    sensitive << ( p_Result_4_fu_247_p1 );

    SC_METHOD(thread_man_V_2_fu_303_p3);
    sensitive << ( p_Result_3_reg_534 );
    sensitive << ( p_Result_4_reg_539 );
    sensitive << ( man_V_1_reg_544 );

    SC_METHOD(thread_or_ln581_fu_429_p2);
    sensitive << ( icmp_ln581_reg_555 );
    sensitive << ( or_ln582_fu_396_p2 );

    SC_METHOD(thread_or_ln582_fu_396_p2);
    sensitive << ( icmp_ln571_reg_549 );
    sensitive << ( icmp_ln582_reg_572 );

    SC_METHOD(thread_or_ln603_1_fu_468_p2);
    sensitive << ( and_ln585_fu_417_p2 );
    sensitive << ( and_ln582_fu_391_p2 );

    SC_METHOD(thread_or_ln603_2_fu_482_p2);
    sensitive << ( or_ln603_fu_454_p2 );
    sensitive << ( or_ln603_1_fu_468_p2 );

    SC_METHOD(thread_or_ln603_fu_454_p2);
    sensitive << ( and_ln603_fu_440_p2 );
    sensitive << ( and_ln585_1_fu_423_p2 );

    SC_METHOD(thread_out_r_blk_n);
    sensitive << ( out_r_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );

    SC_METHOD(thread_out_r_din);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );
    sensitive << ( select_ln603_3_reg_578 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_r_write);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_reg_504_pp0_iter14_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Result_4_fu_247_p1);
    sensitive << ( tmp_18_fu_239_p3 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln588_fu_372_p3);
    sensitive << ( tmp_4_fu_364_p3 );

    SC_METHOD(thread_select_ln603_1_fu_460_p3);
    sensitive << ( trunc_ln583_fu_321_p1 );
    sensitive << ( and_ln585_fu_417_p2 );
    sensitive << ( select_ln588_fu_372_p3 );

    SC_METHOD(thread_select_ln603_2_fu_474_p3);
    sensitive << ( or_ln603_fu_454_p2 );
    sensitive << ( select_ln603_fu_446_p3 );
    sensitive << ( select_ln603_1_fu_460_p3 );

    SC_METHOD(thread_select_ln603_3_fu_488_p3);
    sensitive << ( or_ln603_2_fu_482_p2 );
    sensitive << ( select_ln603_2_fu_474_p3 );

    SC_METHOD(thread_select_ln603_fu_446_p3);
    sensitive << ( and_ln603_fu_440_p2 );
    sensitive << ( shl_ln604_fu_380_p2 );
    sensitive << ( trunc_ln586_fu_357_p1 );

    SC_METHOD(thread_sext_ln581_1_fu_317_p1);
    sensitive << ( sh_amt_fu_308_p3 );

    SC_METHOD(thread_sext_ln581_fu_313_p1);
    sensitive << ( sh_amt_fu_308_p3 );

    SC_METHOD(thread_sh_amt_fu_308_p3);
    sensitive << ( icmp_ln581_reg_555 );
    sensitive << ( add_ln581_reg_562 );
    sensitive << ( sub_ln581_reg_567 );

    SC_METHOD(thread_shl_ln604_fu_380_p2);
    sensitive << ( trunc_ln583_fu_321_p1 );
    sensitive << ( sext_ln581_fu_313_p1 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln581_fu_291_p2);
    sensitive << ( F2_fu_263_p2 );

    SC_METHOD(thread_tmp_18_fu_239_p3);
    sensitive << ( trunc_ln565_fu_235_p1 );

    SC_METHOD(thread_tmp_2_fu_269_p4);
    sensitive << ( F2_fu_263_p2 );

    SC_METHOD(thread_tmp_3_fu_331_p4);
    sensitive << ( sh_amt_fu_308_p3 );

    SC_METHOD(thread_tmp_4_fu_364_p3);
    sensitive << ( bitcast_ln696_fu_361_p1 );

    SC_METHOD(thread_trunc_ln556_fu_209_p1);
    sensitive << ( ireg_V_fu_205_p1 );

    SC_METHOD(thread_trunc_ln565_fu_235_p1);
    sensitive << ( ireg_V_fu_205_p1 );

    SC_METHOD(thread_trunc_ln583_fu_321_p1);
    sensitive << ( man_V_2_fu_303_p3 );

    SC_METHOD(thread_trunc_ln586_fu_357_p1);
    sensitive << ( ashr_ln586_fu_351_p2 );

    SC_METHOD(thread_xor_ln571_fu_386_p2);
    sensitive << ( icmp_ln571_reg_549 );

    SC_METHOD(thread_xor_ln581_fu_434_p2);
    sensitive << ( or_ln581_fu_429_p2 );

    SC_METHOD(thread_xor_ln582_fu_400_p2);
    sensitive << ( or_ln582_fu_396_p2 );

    SC_METHOD(thread_xor_ln585_fu_411_p2);
    sensitive << ( icmp_ln585_fu_325_p2 );

    SC_METHOD(thread_zext_ln461_fu_231_p1);
    sensitive << ( exp_tmp_V_fu_221_p4 );

    SC_METHOD(thread_zext_ln586_fu_347_p1);
    sensitive << ( sext_ln581_1_fu_317_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( config_data_V_empty_n );
    sensitive << ( config_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( icmp_ln13_fu_189_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter14 );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dummy_proc_fe_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, config_data_V_dout, "(port)config_data_V_dout");
    sc_trace(mVcdFile, config_data_V_empty_n, "(port)config_data_V_empty_n");
    sc_trace(mVcdFile, config_data_V_read, "(port)config_data_V_read");
    sc_trace(mVcdFile, config_data_V_din, "(port)config_data_V_din");
    sc_trace(mVcdFile, config_data_V_full_n, "(port)config_data_V_full_n");
    sc_trace(mVcdFile, config_data_V_write, "(port)config_data_V_write");
    sc_trace(mVcdFile, in_r_dout, "(port)in_r_dout");
    sc_trace(mVcdFile, in_r_empty_n, "(port)in_r_empty_n");
    sc_trace(mVcdFile, in_r_read, "(port)in_r_read");
    sc_trace(mVcdFile, out_r_din, "(port)out_r_din");
    sc_trace(mVcdFile, out_r_full_n, "(port)out_r_full_n");
    sc_trace(mVcdFile, out_r_write, "(port)out_r_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, config_data_V_i_blk_n, "config_data_V_i_blk_n");
    sc_trace(mVcdFile, config_data_V_o_blk_n, "config_data_V_o_blk_n");
    sc_trace(mVcdFile, in_r_blk_n, "in_r_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln13_reg_504, "icmp_ln13_reg_504");
    sc_trace(mVcdFile, out_r_blk_n, "out_r_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter14_reg, "icmp_ln13_reg_504_pp0_iter14_reg");
    sc_trace(mVcdFile, i_0_reg_154, "i_0_reg_154");
    sc_trace(mVcdFile, icmp_ln13_fu_189_p2, "icmp_ln13_fu_189_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter1_reg, "icmp_ln13_reg_504_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter2_reg, "icmp_ln13_reg_504_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter3_reg, "icmp_ln13_reg_504_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter4_reg, "icmp_ln13_reg_504_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter5_reg, "icmp_ln13_reg_504_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter6_reg, "icmp_ln13_reg_504_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter7_reg, "icmp_ln13_reg_504_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter8_reg, "icmp_ln13_reg_504_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter9_reg, "icmp_ln13_reg_504_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter10_reg, "icmp_ln13_reg_504_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter11_reg, "icmp_ln13_reg_504_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter12_reg, "icmp_ln13_reg_504_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln13_reg_504_pp0_iter13_reg, "icmp_ln13_reg_504_pp0_iter13_reg");
    sc_trace(mVcdFile, i_fu_195_p2, "i_fu_195_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, in_read_reg_513, "in_read_reg_513");
    sc_trace(mVcdFile, grp_fu_170_p1, "grp_fu_170_p1");
    sc_trace(mVcdFile, tmp_reg_523, "tmp_reg_523");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, v_assign_reg_528, "v_assign_reg_528");
    sc_trace(mVcdFile, v_assign_reg_528_pp0_iter12_reg, "v_assign_reg_528_pp0_iter12_reg");
    sc_trace(mVcdFile, v_assign_reg_528_pp0_iter13_reg, "v_assign_reg_528_pp0_iter13_reg");
    sc_trace(mVcdFile, p_Result_3_reg_534, "p_Result_3_reg_534");
    sc_trace(mVcdFile, p_Result_4_fu_247_p1, "p_Result_4_fu_247_p1");
    sc_trace(mVcdFile, p_Result_4_reg_539, "p_Result_4_reg_539");
    sc_trace(mVcdFile, man_V_1_fu_251_p2, "man_V_1_fu_251_p2");
    sc_trace(mVcdFile, man_V_1_reg_544, "man_V_1_reg_544");
    sc_trace(mVcdFile, icmp_ln571_fu_257_p2, "icmp_ln571_fu_257_p2");
    sc_trace(mVcdFile, icmp_ln571_reg_549, "icmp_ln571_reg_549");
    sc_trace(mVcdFile, icmp_ln581_fu_279_p2, "icmp_ln581_fu_279_p2");
    sc_trace(mVcdFile, icmp_ln581_reg_555, "icmp_ln581_reg_555");
    sc_trace(mVcdFile, add_ln581_fu_285_p2, "add_ln581_fu_285_p2");
    sc_trace(mVcdFile, add_ln581_reg_562, "add_ln581_reg_562");
    sc_trace(mVcdFile, sub_ln581_fu_291_p2, "sub_ln581_fu_291_p2");
    sc_trace(mVcdFile, sub_ln581_reg_567, "sub_ln581_reg_567");
    sc_trace(mVcdFile, icmp_ln582_fu_297_p2, "icmp_ln582_fu_297_p2");
    sc_trace(mVcdFile, icmp_ln582_reg_572, "icmp_ln582_reg_572");
    sc_trace(mVcdFile, select_ln603_3_fu_488_p3, "select_ln603_3_fu_488_p3");
    sc_trace(mVcdFile, select_ln603_3_reg_578, "select_ln603_3_reg_578");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_170_p0, "grp_fu_170_p0");
    sc_trace(mVcdFile, grp_fu_173_p1, "grp_fu_173_p1");
    sc_trace(mVcdFile, ireg_V_fu_205_p1, "ireg_V_fu_205_p1");
    sc_trace(mVcdFile, exp_tmp_V_fu_221_p4, "exp_tmp_V_fu_221_p4");
    sc_trace(mVcdFile, trunc_ln565_fu_235_p1, "trunc_ln565_fu_235_p1");
    sc_trace(mVcdFile, tmp_18_fu_239_p3, "tmp_18_fu_239_p3");
    sc_trace(mVcdFile, trunc_ln556_fu_209_p1, "trunc_ln556_fu_209_p1");
    sc_trace(mVcdFile, zext_ln461_fu_231_p1, "zext_ln461_fu_231_p1");
    sc_trace(mVcdFile, F2_fu_263_p2, "F2_fu_263_p2");
    sc_trace(mVcdFile, tmp_2_fu_269_p4, "tmp_2_fu_269_p4");
    sc_trace(mVcdFile, sh_amt_fu_308_p3, "sh_amt_fu_308_p3");
    sc_trace(mVcdFile, man_V_2_fu_303_p3, "man_V_2_fu_303_p3");
    sc_trace(mVcdFile, tmp_3_fu_331_p4, "tmp_3_fu_331_p4");
    sc_trace(mVcdFile, sext_ln581_1_fu_317_p1, "sext_ln581_1_fu_317_p1");
    sc_trace(mVcdFile, zext_ln586_fu_347_p1, "zext_ln586_fu_347_p1");
    sc_trace(mVcdFile, ashr_ln586_fu_351_p2, "ashr_ln586_fu_351_p2");
    sc_trace(mVcdFile, bitcast_ln696_fu_361_p1, "bitcast_ln696_fu_361_p1");
    sc_trace(mVcdFile, tmp_4_fu_364_p3, "tmp_4_fu_364_p3");
    sc_trace(mVcdFile, trunc_ln583_fu_321_p1, "trunc_ln583_fu_321_p1");
    sc_trace(mVcdFile, sext_ln581_fu_313_p1, "sext_ln581_fu_313_p1");
    sc_trace(mVcdFile, xor_ln571_fu_386_p2, "xor_ln571_fu_386_p2");
    sc_trace(mVcdFile, or_ln582_fu_396_p2, "or_ln582_fu_396_p2");
    sc_trace(mVcdFile, xor_ln582_fu_400_p2, "xor_ln582_fu_400_p2");
    sc_trace(mVcdFile, icmp_ln585_fu_325_p2, "icmp_ln585_fu_325_p2");
    sc_trace(mVcdFile, and_ln581_fu_406_p2, "and_ln581_fu_406_p2");
    sc_trace(mVcdFile, xor_ln585_fu_411_p2, "xor_ln585_fu_411_p2");
    sc_trace(mVcdFile, or_ln581_fu_429_p2, "or_ln581_fu_429_p2");
    sc_trace(mVcdFile, icmp_ln603_fu_341_p2, "icmp_ln603_fu_341_p2");
    sc_trace(mVcdFile, xor_ln581_fu_434_p2, "xor_ln581_fu_434_p2");
    sc_trace(mVcdFile, and_ln603_fu_440_p2, "and_ln603_fu_440_p2");
    sc_trace(mVcdFile, shl_ln604_fu_380_p2, "shl_ln604_fu_380_p2");
    sc_trace(mVcdFile, trunc_ln586_fu_357_p1, "trunc_ln586_fu_357_p1");
    sc_trace(mVcdFile, and_ln585_1_fu_423_p2, "and_ln585_1_fu_423_p2");
    sc_trace(mVcdFile, and_ln585_fu_417_p2, "and_ln585_fu_417_p2");
    sc_trace(mVcdFile, select_ln588_fu_372_p3, "select_ln588_fu_372_p3");
    sc_trace(mVcdFile, and_ln582_fu_391_p2, "and_ln582_fu_391_p2");
    sc_trace(mVcdFile, or_ln603_fu_454_p2, "or_ln603_fu_454_p2");
    sc_trace(mVcdFile, select_ln603_fu_446_p3, "select_ln603_fu_446_p3");
    sc_trace(mVcdFile, select_ln603_1_fu_460_p3, "select_ln603_1_fu_460_p3");
    sc_trace(mVcdFile, or_ln603_1_fu_468_p2, "or_ln603_1_fu_468_p2");
    sc_trace(mVcdFile, or_ln603_2_fu_482_p2, "or_ln603_2_fu_482_p2");
    sc_trace(mVcdFile, select_ln603_2_fu_474_p3, "select_ln603_2_fu_474_p3");
    sc_trace(mVcdFile, grp_fu_165_ce, "grp_fu_165_ce");
    sc_trace(mVcdFile, grp_fu_170_ce, "grp_fu_170_ce");
    sc_trace(mVcdFile, grp_fu_173_ce, "grp_fu_173_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

dummy_proc_fe::~dummy_proc_fe() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete kernel_fmul_32ns_bkb_U1;
    delete kernel_sitofp_32scud_U2;
    delete kernel_fpext_32nsdEe_U3;
}

void dummy_proc_fe::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_3B000000;
}

void dummy_proc_fe::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
            ap_enable_reg_pp0_iter15 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_189_p2.read()))) {
        i_0_reg_154 = i_fu_195_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
        i_0_reg_154 = ap_const_lv12_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter12_reg.read()))) {
        add_ln581_reg_562 = add_ln581_fu_285_p2.read();
        icmp_ln571_reg_549 = icmp_ln571_fu_257_p2.read();
        icmp_ln581_reg_555 = icmp_ln581_fu_279_p2.read();
        icmp_ln582_reg_572 = icmp_ln582_fu_297_p2.read();
        man_V_1_reg_544 = man_V_1_fu_251_p2.read();
        p_Result_3_reg_534 = ireg_V_fu_205_p1.read().range(63, 63);
        p_Result_4_reg_539 = p_Result_4_fu_247_p1.read();
        sub_ln581_reg_567 = sub_ln581_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln13_reg_504 = icmp_ln13_fu_189_p2.read();
        icmp_ln13_reg_504_pp0_iter1_reg = icmp_ln13_reg_504.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln13_reg_504_pp0_iter10_reg = icmp_ln13_reg_504_pp0_iter9_reg.read();
        icmp_ln13_reg_504_pp0_iter11_reg = icmp_ln13_reg_504_pp0_iter10_reg.read();
        icmp_ln13_reg_504_pp0_iter12_reg = icmp_ln13_reg_504_pp0_iter11_reg.read();
        icmp_ln13_reg_504_pp0_iter13_reg = icmp_ln13_reg_504_pp0_iter12_reg.read();
        icmp_ln13_reg_504_pp0_iter14_reg = icmp_ln13_reg_504_pp0_iter13_reg.read();
        icmp_ln13_reg_504_pp0_iter2_reg = icmp_ln13_reg_504_pp0_iter1_reg.read();
        icmp_ln13_reg_504_pp0_iter3_reg = icmp_ln13_reg_504_pp0_iter2_reg.read();
        icmp_ln13_reg_504_pp0_iter4_reg = icmp_ln13_reg_504_pp0_iter3_reg.read();
        icmp_ln13_reg_504_pp0_iter5_reg = icmp_ln13_reg_504_pp0_iter4_reg.read();
        icmp_ln13_reg_504_pp0_iter6_reg = icmp_ln13_reg_504_pp0_iter5_reg.read();
        icmp_ln13_reg_504_pp0_iter7_reg = icmp_ln13_reg_504_pp0_iter6_reg.read();
        icmp_ln13_reg_504_pp0_iter8_reg = icmp_ln13_reg_504_pp0_iter7_reg.read();
        icmp_ln13_reg_504_pp0_iter9_reg = icmp_ln13_reg_504_pp0_iter8_reg.read();
        v_assign_reg_528_pp0_iter12_reg = v_assign_reg_528.read();
        v_assign_reg_528_pp0_iter13_reg = v_assign_reg_528_pp0_iter12_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_read_reg_513 = in_r_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter13_reg.read()))) {
        select_ln603_3_reg_578 = select_ln603_3_fu_488_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter6_reg.read()))) {
        tmp_reg_523 = grp_fu_170_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter10_reg.read()))) {
        v_assign_reg_528 = grp_fu_165_p2.read();
    }
}

void dummy_proc_fe::thread_F2_fu_263_p2() {
    F2_fu_263_p2 = (!ap_const_lv12_433.is_01() || !zext_ln461_fu_231_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(zext_ln461_fu_231_p1.read()));
}

void dummy_proc_fe::thread_add_ln581_fu_285_p2() {
    add_ln581_fu_285_p2 = (!ap_const_lv12_FF1.is_01() || !F2_fu_263_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF1) + sc_biguint<12>(F2_fu_263_p2.read()));
}

void dummy_proc_fe::thread_and_ln581_fu_406_p2() {
    and_ln581_fu_406_p2 = (icmp_ln581_reg_555.read() & xor_ln582_fu_400_p2.read());
}

void dummy_proc_fe::thread_and_ln582_fu_391_p2() {
    and_ln582_fu_391_p2 = (icmp_ln582_reg_572.read() & xor_ln571_fu_386_p2.read());
}

void dummy_proc_fe::thread_and_ln585_1_fu_423_p2() {
    and_ln585_1_fu_423_p2 = (and_ln581_fu_406_p2.read() & icmp_ln585_fu_325_p2.read());
}

void dummy_proc_fe::thread_and_ln585_fu_417_p2() {
    and_ln585_fu_417_p2 = (and_ln581_fu_406_p2.read() & xor_ln585_fu_411_p2.read());
}

void dummy_proc_fe::thread_and_ln603_fu_440_p2() {
    and_ln603_fu_440_p2 = (icmp_ln603_fu_341_p2.read() & xor_ln581_fu_434_p2.read());
}

void dummy_proc_fe::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void dummy_proc_fe::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dummy_proc_fe::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[2];
}

void dummy_proc_fe::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())));
}

void dummy_proc_fe::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())));
}

void dummy_proc_fe::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read())));
}

void dummy_proc_fe::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read()));
}

void dummy_proc_fe::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_full_n.read()));
}

void dummy_proc_fe::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_empty_n.read()));
}

void dummy_proc_fe::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dummy_proc_fe::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln13_fu_189_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dummy_proc_fe::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dummy_proc_fe::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void dummy_proc_fe::thread_ashr_ln586_fu_351_p2() {
    ashr_ln586_fu_351_p2 = (!man_V_2_fu_303_p3.read().is_01() || !zext_ln586_fu_347_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(man_V_2_fu_303_p3.read()) >> (unsigned short)zext_ln586_fu_347_p1.read().to_uint();
}

void dummy_proc_fe::thread_bitcast_ln696_fu_361_p1() {
    bitcast_ln696_fu_361_p1 = v_assign_reg_528_pp0_iter13_reg.read();
}

void dummy_proc_fe::thread_config_data_V_din() {
    config_data_V_din = esl_partset<16,16,13,32,32>(config_data_V_dout.read(), ap_const_lv13_557, ap_const_lv32_0, ap_const_lv32_C);
}

void dummy_proc_fe::thread_config_data_V_i_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        config_data_V_i_blk_n = config_data_V_empty_n.read();
    } else {
        config_data_V_i_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_config_data_V_o_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        config_data_V_o_blk_n = config_data_V_full_n.read();
    } else {
        config_data_V_o_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_config_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
        config_data_V_read = ap_const_logic_1;
    } else {
        config_data_V_read = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_config_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
        config_data_V_write = ap_const_logic_1;
    } else {
        config_data_V_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_exp_tmp_V_fu_221_p4() {
    exp_tmp_V_fu_221_p4 = ireg_V_fu_205_p1.read().range(62, 52);
}

void dummy_proc_fe::thread_grp_fu_165_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_165_ce = ap_const_logic_1;
    } else {
        grp_fu_165_ce = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_grp_fu_170_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_170_ce = ap_const_logic_1;
    } else {
        grp_fu_170_ce = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_grp_fu_170_p0() {
    grp_fu_170_p0 = esl_sext<32,16>(in_read_reg_513.read());
}

void dummy_proc_fe::thread_grp_fu_173_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_173_ce = ap_const_logic_1;
    } else {
        grp_fu_173_ce = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_i_fu_195_p2() {
    i_fu_195_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_0_reg_154.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void dummy_proc_fe::thread_icmp_ln13_fu_189_p2() {
    icmp_ln13_fu_189_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv12_800.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_154.read() == ap_const_lv12_800);
}

void dummy_proc_fe::thread_icmp_ln571_fu_257_p2() {
    icmp_ln571_fu_257_p2 = (!trunc_ln556_fu_209_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln556_fu_209_p1.read() == ap_const_lv63_0);
}

void dummy_proc_fe::thread_icmp_ln581_fu_279_p2() {
    icmp_ln581_fu_279_p2 = (!tmp_2_fu_269_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): (sc_bigint<8>(tmp_2_fu_269_p4.read()) > sc_bigint<8>(ap_const_lv8_0));
}

void dummy_proc_fe::thread_icmp_ln582_fu_297_p2() {
    icmp_ln582_fu_297_p2 = (!F2_fu_263_p2.read().is_01() || !ap_const_lv12_F.is_01())? sc_lv<1>(): sc_lv<1>(F2_fu_263_p2.read() == ap_const_lv12_F);
}

void dummy_proc_fe::thread_icmp_ln585_fu_325_p2() {
    icmp_ln585_fu_325_p2 = (!sh_amt_fu_308_p3.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_308_p3.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void dummy_proc_fe::thread_icmp_ln603_fu_341_p2() {
    icmp_ln603_fu_341_p2 = (!tmp_3_fu_331_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_331_p4.read() == ap_const_lv8_0);
}

void dummy_proc_fe::thread_in_r_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0))) {
        in_r_blk_n = in_r_empty_n.read();
    } else {
        in_r_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_in_r_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_reg_504.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_r_read = ap_const_logic_1;
    } else {
        in_r_read = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_ireg_V_fu_205_p1() {
    ireg_V_fu_205_p1 = grp_fu_173_p1.read();
}

void dummy_proc_fe::thread_man_V_1_fu_251_p2() {
    man_V_1_fu_251_p2 = (!ap_const_lv54_0.is_01() || !p_Result_4_fu_247_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(p_Result_4_fu_247_p1.read()));
}

void dummy_proc_fe::thread_man_V_2_fu_303_p3() {
    man_V_2_fu_303_p3 = (!p_Result_3_reg_534.read()[0].is_01())? sc_lv<54>(): ((p_Result_3_reg_534.read()[0].to_bool())? man_V_1_reg_544.read(): p_Result_4_reg_539.read());
}

void dummy_proc_fe::thread_or_ln581_fu_429_p2() {
    or_ln581_fu_429_p2 = (or_ln582_fu_396_p2.read() | icmp_ln581_reg_555.read());
}

void dummy_proc_fe::thread_or_ln582_fu_396_p2() {
    or_ln582_fu_396_p2 = (icmp_ln571_reg_549.read() | icmp_ln582_reg_572.read());
}

void dummy_proc_fe::thread_or_ln603_1_fu_468_p2() {
    or_ln603_1_fu_468_p2 = (and_ln585_fu_417_p2.read() | and_ln582_fu_391_p2.read());
}

void dummy_proc_fe::thread_or_ln603_2_fu_482_p2() {
    or_ln603_2_fu_482_p2 = (or_ln603_fu_454_p2.read() | or_ln603_1_fu_468_p2.read());
}

void dummy_proc_fe::thread_or_ln603_fu_454_p2() {
    or_ln603_fu_454_p2 = (and_ln603_fu_440_p2.read() | and_ln585_1_fu_423_p2.read());
}

void dummy_proc_fe::thread_out_r_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()))) {
        out_r_blk_n = out_r_full_n.read();
    } else {
        out_r_blk_n = ap_const_logic_1;
    }
}

void dummy_proc_fe::thread_out_r_din() {
    out_r_din = esl_concat<16,16>(ap_const_lv16_0, select_ln603_3_reg_578.read());
}

void dummy_proc_fe::thread_out_r_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_reg_504_pp0_iter14_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_r_write = ap_const_logic_1;
    } else {
        out_r_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_p_Result_4_fu_247_p1() {
    p_Result_4_fu_247_p1 = esl_zext<54,53>(tmp_18_fu_239_p3.read());
}

void dummy_proc_fe::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void dummy_proc_fe::thread_select_ln588_fu_372_p3() {
    select_ln588_fu_372_p3 = (!tmp_4_fu_364_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_4_fu_364_p3.read()[0].to_bool())? ap_const_lv16_FFFF: ap_const_lv16_0);
}

void dummy_proc_fe::thread_select_ln603_1_fu_460_p3() {
    select_ln603_1_fu_460_p3 = (!and_ln585_fu_417_p2.read()[0].is_01())? sc_lv<16>(): ((and_ln585_fu_417_p2.read()[0].to_bool())? select_ln588_fu_372_p3.read(): trunc_ln583_fu_321_p1.read());
}

void dummy_proc_fe::thread_select_ln603_2_fu_474_p3() {
    select_ln603_2_fu_474_p3 = (!or_ln603_fu_454_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln603_fu_454_p2.read()[0].to_bool())? select_ln603_fu_446_p3.read(): select_ln603_1_fu_460_p3.read());
}

void dummy_proc_fe::thread_select_ln603_3_fu_488_p3() {
    select_ln603_3_fu_488_p3 = (!or_ln603_2_fu_482_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln603_2_fu_482_p2.read()[0].to_bool())? select_ln603_2_fu_474_p3.read(): ap_const_lv16_0);
}

void dummy_proc_fe::thread_select_ln603_fu_446_p3() {
    select_ln603_fu_446_p3 = (!and_ln603_fu_440_p2.read()[0].is_01())? sc_lv<16>(): ((and_ln603_fu_440_p2.read()[0].to_bool())? shl_ln604_fu_380_p2.read(): trunc_ln586_fu_357_p1.read());
}

void dummy_proc_fe::thread_sext_ln581_1_fu_317_p1() {
    sext_ln581_1_fu_317_p1 = esl_sext<32,12>(sh_amt_fu_308_p3.read());
}

void dummy_proc_fe::thread_sext_ln581_fu_313_p1() {
    sext_ln581_fu_313_p1 = esl_sext<16,12>(sh_amt_fu_308_p3.read());
}

void dummy_proc_fe::thread_sh_amt_fu_308_p3() {
    sh_amt_fu_308_p3 = (!icmp_ln581_reg_555.read()[0].is_01())? sc_lv<12>(): ((icmp_ln581_reg_555.read()[0].to_bool())? add_ln581_reg_562.read(): sub_ln581_reg_567.read());
}

void dummy_proc_fe::thread_shl_ln604_fu_380_p2() {
    shl_ln604_fu_380_p2 = (!sext_ln581_fu_313_p1.read().is_01())? sc_lv<16>(): trunc_ln583_fu_321_p1.read() << (unsigned short)sext_ln581_fu_313_p1.read().to_uint();
}

void dummy_proc_fe::thread_start_out() {
    start_out = real_start.read();
}

void dummy_proc_fe::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void dummy_proc_fe::thread_sub_ln581_fu_291_p2() {
    sub_ln581_fu_291_p2 = (!ap_const_lv12_F.is_01() || !F2_fu_263_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_F) - sc_biguint<12>(F2_fu_263_p2.read()));
}

void dummy_proc_fe::thread_tmp_18_fu_239_p3() {
    tmp_18_fu_239_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln565_fu_235_p1.read());
}

void dummy_proc_fe::thread_tmp_2_fu_269_p4() {
    tmp_2_fu_269_p4 = F2_fu_263_p2.read().range(11, 4);
}

void dummy_proc_fe::thread_tmp_3_fu_331_p4() {
    tmp_3_fu_331_p4 = sh_amt_fu_308_p3.read().range(11, 4);
}

void dummy_proc_fe::thread_tmp_4_fu_364_p3() {
    tmp_4_fu_364_p3 = bitcast_ln696_fu_361_p1.read().range(31, 31);
}

void dummy_proc_fe::thread_trunc_ln556_fu_209_p1() {
    trunc_ln556_fu_209_p1 = ireg_V_fu_205_p1.read().range(63-1, 0);
}

void dummy_proc_fe::thread_trunc_ln565_fu_235_p1() {
    trunc_ln565_fu_235_p1 = ireg_V_fu_205_p1.read().range(52-1, 0);
}

void dummy_proc_fe::thread_trunc_ln583_fu_321_p1() {
    trunc_ln583_fu_321_p1 = man_V_2_fu_303_p3.read().range(16-1, 0);
}

void dummy_proc_fe::thread_trunc_ln586_fu_357_p1() {
    trunc_ln586_fu_357_p1 = ashr_ln586_fu_351_p2.read().range(16-1, 0);
}

void dummy_proc_fe::thread_xor_ln571_fu_386_p2() {
    xor_ln571_fu_386_p2 = (icmp_ln571_reg_549.read() ^ ap_const_lv1_1);
}

void dummy_proc_fe::thread_xor_ln581_fu_434_p2() {
    xor_ln581_fu_434_p2 = (or_ln581_fu_429_p2.read() ^ ap_const_lv1_1);
}

void dummy_proc_fe::thread_xor_ln582_fu_400_p2() {
    xor_ln582_fu_400_p2 = (or_ln582_fu_396_p2.read() ^ ap_const_lv1_1);
}

void dummy_proc_fe::thread_xor_ln585_fu_411_p2() {
    xor_ln585_fu_411_p2 = (icmp_ln585_fu_325_p2.read() ^ ap_const_lv1_1);
}

void dummy_proc_fe::thread_zext_ln461_fu_231_p1() {
    zext_ln461_fu_231_p1 = esl_zext<12,11>(exp_tmp_V_fu_221_p4.read());
}

void dummy_proc_fe::thread_zext_ln586_fu_347_p1() {
    zext_ln586_fu_347_p1 = esl_zext<54,32>(sext_ln581_1_fu_317_p1.read());
}

void dummy_proc_fe::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, config_data_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter14.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln13_fu_189_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter14.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln13_fu_189_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

