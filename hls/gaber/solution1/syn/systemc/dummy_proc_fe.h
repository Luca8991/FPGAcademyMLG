// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dummy_proc_fe_HH_
#define _dummy_proc_fe_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_fmul_32ns_bkb.h"
#include "kernel_sitofp_32scud.h"
#include "kernel_fpext_32nsdEe.h"

namespace ap_rtl {

struct dummy_proc_fe : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > config_data_V_dout;
    sc_in< sc_logic > config_data_V_empty_n;
    sc_out< sc_logic > config_data_V_read;
    sc_out< sc_lv<16> > config_data_V_din;
    sc_in< sc_logic > config_data_V_full_n;
    sc_out< sc_logic > config_data_V_write;
    sc_in< sc_lv<16> > in_r_dout;
    sc_in< sc_logic > in_r_empty_n;
    sc_out< sc_logic > in_r_read;
    sc_out< sc_lv<32> > out_r_din;
    sc_in< sc_logic > out_r_full_n;
    sc_out< sc_logic > out_r_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    dummy_proc_fe(sc_module_name name);
    SC_HAS_PROCESS(dummy_proc_fe);

    ~dummy_proc_fe();

    sc_trace_file* mVcdFile;

    kernel_fmul_32ns_bkb<1,4,32,32,32>* kernel_fmul_32ns_bkb_U1;
    kernel_sitofp_32scud<1,6,32,32>* kernel_sitofp_32scud_U2;
    kernel_fpext_32nsdEe<1,2,32,64>* kernel_fpext_32nsdEe_U3;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > config_data_V_i_blk_n;
    sc_signal< sc_logic > config_data_V_o_blk_n;
    sc_signal< sc_logic > in_r_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504;
    sc_signal< sc_logic > out_r_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter14_reg;
    sc_signal< sc_lv<12> > i_0_reg_154;
    sc_signal< sc_lv<1> > icmp_ln13_fu_189_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln13_reg_504_pp0_iter13_reg;
    sc_signal< sc_lv<12> > i_fu_195_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > in_read_reg_513;
    sc_signal< sc_lv<32> > grp_fu_170_p1;
    sc_signal< sc_lv<32> > tmp_reg_523;
    sc_signal< sc_lv<32> > grp_fu_165_p2;
    sc_signal< sc_lv<32> > v_assign_reg_528;
    sc_signal< sc_lv<32> > v_assign_reg_528_pp0_iter12_reg;
    sc_signal< sc_lv<32> > v_assign_reg_528_pp0_iter13_reg;
    sc_signal< sc_lv<1> > p_Result_3_reg_534;
    sc_signal< sc_lv<54> > p_Result_4_fu_247_p1;
    sc_signal< sc_lv<54> > p_Result_4_reg_539;
    sc_signal< sc_lv<54> > man_V_1_fu_251_p2;
    sc_signal< sc_lv<54> > man_V_1_reg_544;
    sc_signal< sc_lv<1> > icmp_ln571_fu_257_p2;
    sc_signal< sc_lv<1> > icmp_ln571_reg_549;
    sc_signal< sc_lv<1> > icmp_ln581_fu_279_p2;
    sc_signal< sc_lv<1> > icmp_ln581_reg_555;
    sc_signal< sc_lv<12> > add_ln581_fu_285_p2;
    sc_signal< sc_lv<12> > add_ln581_reg_562;
    sc_signal< sc_lv<12> > sub_ln581_fu_291_p2;
    sc_signal< sc_lv<12> > sub_ln581_reg_567;
    sc_signal< sc_lv<1> > icmp_ln582_fu_297_p2;
    sc_signal< sc_lv<1> > icmp_ln582_reg_572;
    sc_signal< sc_lv<16> > select_ln603_3_fu_488_p3;
    sc_signal< sc_lv<16> > select_ln603_3_reg_578;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_170_p0;
    sc_signal< sc_lv<64> > grp_fu_173_p1;
    sc_signal< sc_lv<64> > ireg_V_fu_205_p1;
    sc_signal< sc_lv<11> > exp_tmp_V_fu_221_p4;
    sc_signal< sc_lv<52> > trunc_ln565_fu_235_p1;
    sc_signal< sc_lv<53> > tmp_18_fu_239_p3;
    sc_signal< sc_lv<63> > trunc_ln556_fu_209_p1;
    sc_signal< sc_lv<12> > zext_ln461_fu_231_p1;
    sc_signal< sc_lv<12> > F2_fu_263_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_269_p4;
    sc_signal< sc_lv<12> > sh_amt_fu_308_p3;
    sc_signal< sc_lv<54> > man_V_2_fu_303_p3;
    sc_signal< sc_lv<8> > tmp_3_fu_331_p4;
    sc_signal< sc_lv<32> > sext_ln581_1_fu_317_p1;
    sc_signal< sc_lv<54> > zext_ln586_fu_347_p1;
    sc_signal< sc_lv<54> > ashr_ln586_fu_351_p2;
    sc_signal< sc_lv<32> > bitcast_ln696_fu_361_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_364_p3;
    sc_signal< sc_lv<16> > trunc_ln583_fu_321_p1;
    sc_signal< sc_lv<16> > sext_ln581_fu_313_p1;
    sc_signal< sc_lv<1> > xor_ln571_fu_386_p2;
    sc_signal< sc_lv<1> > or_ln582_fu_396_p2;
    sc_signal< sc_lv<1> > xor_ln582_fu_400_p2;
    sc_signal< sc_lv<1> > icmp_ln585_fu_325_p2;
    sc_signal< sc_lv<1> > and_ln581_fu_406_p2;
    sc_signal< sc_lv<1> > xor_ln585_fu_411_p2;
    sc_signal< sc_lv<1> > or_ln581_fu_429_p2;
    sc_signal< sc_lv<1> > icmp_ln603_fu_341_p2;
    sc_signal< sc_lv<1> > xor_ln581_fu_434_p2;
    sc_signal< sc_lv<1> > and_ln603_fu_440_p2;
    sc_signal< sc_lv<16> > shl_ln604_fu_380_p2;
    sc_signal< sc_lv<16> > trunc_ln586_fu_357_p1;
    sc_signal< sc_lv<1> > and_ln585_1_fu_423_p2;
    sc_signal< sc_lv<1> > and_ln585_fu_417_p2;
    sc_signal< sc_lv<16> > select_ln588_fu_372_p3;
    sc_signal< sc_lv<1> > and_ln582_fu_391_p2;
    sc_signal< sc_lv<1> > or_ln603_fu_454_p2;
    sc_signal< sc_lv<16> > select_ln603_fu_446_p3;
    sc_signal< sc_lv<16> > select_ln603_1_fu_460_p3;
    sc_signal< sc_lv<1> > or_ln603_1_fu_468_p2;
    sc_signal< sc_lv<1> > or_ln603_2_fu_482_p2;
    sc_signal< sc_lv<16> > select_ln603_2_fu_474_p3;
    sc_signal< sc_logic > grp_fu_165_ce;
    sc_signal< sc_logic > grp_fu_170_ce;
    sc_signal< sc_logic > grp_fu_173_ce;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state18;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_3B000000;
    static const sc_lv<13> ap_const_lv13_557;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<54> ap_const_lv54_0;
    static const sc_lv<63> ap_const_lv63_0;
    static const sc_lv<12> ap_const_lv12_433;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<12> ap_const_lv12_FF1;
    static const sc_lv<12> ap_const_lv12_F;
    static const sc_lv<12> ap_const_lv12_36;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_F2_fu_263_p2();
    void thread_add_ln581_fu_285_p2();
    void thread_and_ln581_fu_406_p2();
    void thread_and_ln582_fu_391_p2();
    void thread_and_ln585_1_fu_423_p2();
    void thread_and_ln585_fu_417_p2();
    void thread_and_ln603_fu_440_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state18();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ashr_ln586_fu_351_p2();
    void thread_bitcast_ln696_fu_361_p1();
    void thread_config_data_V_din();
    void thread_config_data_V_i_blk_n();
    void thread_config_data_V_o_blk_n();
    void thread_config_data_V_read();
    void thread_config_data_V_write();
    void thread_exp_tmp_V_fu_221_p4();
    void thread_grp_fu_165_ce();
    void thread_grp_fu_170_ce();
    void thread_grp_fu_170_p0();
    void thread_grp_fu_173_ce();
    void thread_i_fu_195_p2();
    void thread_icmp_ln13_fu_189_p2();
    void thread_icmp_ln571_fu_257_p2();
    void thread_icmp_ln581_fu_279_p2();
    void thread_icmp_ln582_fu_297_p2();
    void thread_icmp_ln585_fu_325_p2();
    void thread_icmp_ln603_fu_341_p2();
    void thread_in_r_blk_n();
    void thread_in_r_read();
    void thread_internal_ap_ready();
    void thread_ireg_V_fu_205_p1();
    void thread_man_V_1_fu_251_p2();
    void thread_man_V_2_fu_303_p3();
    void thread_or_ln581_fu_429_p2();
    void thread_or_ln582_fu_396_p2();
    void thread_or_ln603_1_fu_468_p2();
    void thread_or_ln603_2_fu_482_p2();
    void thread_or_ln603_fu_454_p2();
    void thread_out_r_blk_n();
    void thread_out_r_din();
    void thread_out_r_write();
    void thread_p_Result_4_fu_247_p1();
    void thread_real_start();
    void thread_select_ln588_fu_372_p3();
    void thread_select_ln603_1_fu_460_p3();
    void thread_select_ln603_2_fu_474_p3();
    void thread_select_ln603_3_fu_488_p3();
    void thread_select_ln603_fu_446_p3();
    void thread_sext_ln581_1_fu_317_p1();
    void thread_sext_ln581_fu_313_p1();
    void thread_sh_amt_fu_308_p3();
    void thread_shl_ln604_fu_380_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln581_fu_291_p2();
    void thread_tmp_18_fu_239_p3();
    void thread_tmp_2_fu_269_p4();
    void thread_tmp_3_fu_331_p4();
    void thread_tmp_4_fu_364_p3();
    void thread_trunc_ln556_fu_209_p1();
    void thread_trunc_ln565_fu_235_p1();
    void thread_trunc_ln583_fu_321_p1();
    void thread_trunc_ln586_fu_357_p1();
    void thread_xor_ln571_fu_386_p2();
    void thread_xor_ln581_fu_434_p2();
    void thread_xor_ln582_fu_400_p2();
    void thread_xor_ln585_fu_411_p2();
    void thread_zext_ln461_fu_231_p1();
    void thread_zext_ln586_fu_347_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
