// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _act_fun_HH_
#define _act_fun_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_fptrunc_64hbi.h"
#include "kernel_fpext_32nsdEe.h"
#include "kernel_fcmp_32ns_ibs.h"
#include "kernel_dadddsub_6jbC.h"
#include "kernel_dmul_64ns_kbM.h"

namespace ap_rtl {

struct act_fun : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > vec;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const5;
    sc_signal< sc_lv<5> > ap_var_for_const3;
    sc_signal< sc_lv<5> > ap_var_for_const4;
    sc_signal< sc_lv<5> > ap_var_for_const6;


    // Module declarations
    act_fun(sc_module_name name);
    SC_HAS_PROCESS(act_fun);

    ~act_fun();

    sc_trace_file* mVcdFile;

    kernel_fptrunc_64hbi<1,2,64,32>* kernel_fptrunc_64hbi_U25;
    kernel_fpext_32nsdEe<1,2,32,64>* kernel_fpext_32nsdEe_U26;
    kernel_fcmp_32ns_ibs<1,2,32,32,1>* kernel_fcmp_32ns_ibs_U27;
    kernel_fcmp_32ns_ibs<1,2,32,32,1>* kernel_fcmp_32ns_ibs_U28;
    kernel_fcmp_32ns_ibs<1,2,32,32,1>* kernel_fcmp_32ns_ibs_U29;
    kernel_fcmp_32ns_ibs<1,2,32,32,1>* kernel_fcmp_32ns_ibs_U30;
    kernel_dadddsub_6jbC<1,6,64,64,64>* kernel_dadddsub_6jbC_U31;
    kernel_dmul_64ns_kbM<1,6,64,64,64>* kernel_dmul_64ns_kbM_U32;
    sc_signal< sc_lv<36> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_72_p2;
    sc_signal< sc_lv<64> > reg_78;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > and_ln6_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > and_ln10_3_reg_249;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<64> > grp_fu_65_p2;
    sc_signal< sc_lv<64> > reg_86;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<1> > or_ln6_fu_122_p2;
    sc_signal< sc_lv<1> > or_ln6_reg_211;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > and_ln6_fu_128_p2;
    sc_signal< sc_lv<1> > and_ln8_1_fu_139_p2;
    sc_signal< sc_lv<1> > and_ln8_1_reg_223;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > grp_fu_55_p2;
    sc_signal< sc_lv<1> > tmp_30_reg_229;
    sc_signal< sc_lv<1> > grp_fu_60_p2;
    sc_signal< sc_lv<1> > tmp_31_reg_234;
    sc_signal< sc_lv<64> > grp_fu_41_p1;
    sc_signal< sc_lv<64> > tmp_19_reg_239;
    sc_signal< sc_lv<1> > xor_ln6_fu_145_p2;
    sc_signal< sc_lv<1> > xor_ln6_reg_244;
    sc_signal< sc_lv<1> > and_ln10_3_fu_170_p2;
    sc_signal< sc_lv<32> > grp_fu_38_p1;
    sc_signal< sc_lv<32> > vec_assign_reg_254;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<64> > grp_fu_38_p0;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > grp_fu_65_p0;
    sc_signal< sc_lv<64> > grp_fu_65_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > grp_fu_72_p0;
    sc_signal< sc_lv<64> > grp_fu_72_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > bitcast_ln6_fu_93_p1;
    sc_signal< sc_lv<8> > tmp_fu_96_p4;
    sc_signal< sc_lv<23> > trunc_ln6_fu_106_p1;
    sc_signal< sc_lv<1> > icmp_ln6_1_fu_116_p2;
    sc_signal< sc_lv<1> > icmp_ln6_fu_110_p2;
    sc_signal< sc_lv<1> > grp_fu_44_p2;
    sc_signal< sc_lv<1> > and_ln8_fu_134_p2;
    sc_signal< sc_lv<1> > grp_fu_50_p2;
    sc_signal< sc_lv<1> > xor_ln8_fu_150_p2;
    sc_signal< sc_lv<1> > and_ln10_fu_155_p2;
    sc_signal< sc_lv<1> > and_ln10_2_fu_165_p2;
    sc_signal< sc_lv<1> > and_ln10_1_fu_159_p2;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<1> > and_ln8_2_fu_176_p2;
    sc_signal< sc_lv<32> > select_ln8_fu_180_p3;
    sc_signal< sc_lv<32> > select_ln10_fu_187_p3;
    sc_signal< sc_lv<5> > grp_fu_44_opcode;
    sc_signal< sc_lv<2> > grp_fu_65_opcode;
    sc_signal< sc_lv<32> > select_ln6_fu_194_p3;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<36> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<36> ap_ST_fsm_state1;
    static const sc_lv<36> ap_ST_fsm_state2;
    static const sc_lv<36> ap_ST_fsm_state3;
    static const sc_lv<36> ap_ST_fsm_state4;
    static const sc_lv<36> ap_ST_fsm_state5;
    static const sc_lv<36> ap_ST_fsm_state6;
    static const sc_lv<36> ap_ST_fsm_state7;
    static const sc_lv<36> ap_ST_fsm_state8;
    static const sc_lv<36> ap_ST_fsm_state9;
    static const sc_lv<36> ap_ST_fsm_state10;
    static const sc_lv<36> ap_ST_fsm_state11;
    static const sc_lv<36> ap_ST_fsm_state12;
    static const sc_lv<36> ap_ST_fsm_state13;
    static const sc_lv<36> ap_ST_fsm_state14;
    static const sc_lv<36> ap_ST_fsm_state15;
    static const sc_lv<36> ap_ST_fsm_state16;
    static const sc_lv<36> ap_ST_fsm_state17;
    static const sc_lv<36> ap_ST_fsm_state18;
    static const sc_lv<36> ap_ST_fsm_state19;
    static const sc_lv<36> ap_ST_fsm_state20;
    static const sc_lv<36> ap_ST_fsm_state21;
    static const sc_lv<36> ap_ST_fsm_state22;
    static const sc_lv<36> ap_ST_fsm_state23;
    static const sc_lv<36> ap_ST_fsm_state24;
    static const sc_lv<36> ap_ST_fsm_state25;
    static const sc_lv<36> ap_ST_fsm_state26;
    static const sc_lv<36> ap_ST_fsm_state27;
    static const sc_lv<36> ap_ST_fsm_state28;
    static const sc_lv<36> ap_ST_fsm_state29;
    static const sc_lv<36> ap_ST_fsm_state30;
    static const sc_lv<36> ap_ST_fsm_state31;
    static const sc_lv<36> ap_ST_fsm_state32;
    static const sc_lv<36> ap_ST_fsm_state33;
    static const sc_lv<36> ap_ST_fsm_state34;
    static const sc_lv<36> ap_ST_fsm_state35;
    static const sc_lv<36> ap_ST_fsm_state36;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_C0800000;
    static const sc_lv<32> ap_const_lv32_40800000;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<64> ap_const_lv64_BFF0000000000000;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<64> ap_const_lv64_3FD0000000000000;
    static const sc_lv<64> ap_const_lv64_3FE0000000000000;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_and_ln10_1_fu_159_p2();
    void thread_and_ln10_2_fu_165_p2();
    void thread_and_ln10_3_fu_170_p2();
    void thread_and_ln10_fu_155_p2();
    void thread_and_ln6_fu_128_p2();
    void thread_and_ln8_1_fu_139_p2();
    void thread_and_ln8_2_fu_176_p2();
    void thread_and_ln8_fu_134_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bitcast_ln6_fu_93_p1();
    void thread_grp_fu_38_p0();
    void thread_grp_fu_44_opcode();
    void thread_grp_fu_65_opcode();
    void thread_grp_fu_65_p0();
    void thread_grp_fu_65_p1();
    void thread_grp_fu_72_p0();
    void thread_grp_fu_72_p1();
    void thread_icmp_ln6_1_fu_116_p2();
    void thread_icmp_ln6_fu_110_p2();
    void thread_or_ln6_fu_122_p2();
    void thread_select_ln10_fu_187_p3();
    void thread_select_ln6_fu_194_p3();
    void thread_select_ln8_fu_180_p3();
    void thread_tmp_fu_96_p4();
    void thread_trunc_ln6_fu_106_p1();
    void thread_xor_ln6_fu_145_p2();
    void thread_xor_ln8_fu_150_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
