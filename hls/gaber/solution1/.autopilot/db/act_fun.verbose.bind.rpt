

================================================================
== Vivado HLS Report for 'act_fun'
================================================================
* Date:           Mon May  4 11:14:26 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        neural_net_HLS
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.870 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       35|       35| 0.350 us | 0.350 us |   35|   35|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 36
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.09>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%vec_read = call float @_ssdm_op_Read.ap_auto.float(float %vec) nounwind" [neural_net_HLS/solution1/kernel.cpp:5]   --->   Operation 37 'read' 'vec_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (5.09ns)   --->   "%tmp_24 = fcmp ole float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 38 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.07>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast float %vec_read to i32" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 39 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln6, i32 23, i32 30)" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 40 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i32 %bitcast_ln6 to i23" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 41 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.47ns)   --->   "%icmp_ln6 = icmp ne i8 %tmp, -1" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 42 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (2.40ns)   --->   "%icmp_ln6_1 = icmp eq i23 %trunc_ln6, 0" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 43 'icmp' 'icmp_ln6_1' <Predicate = true> <Delay = 2.40> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.97ns)   --->   "%or_ln6 = or i1 %icmp_ln6_1, %icmp_ln6" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 44 'or' 'or_ln6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/2] (5.09ns)   --->   "%tmp_24 = fcmp ole float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 45 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.97ns)   --->   "%and_ln6 = and i1 %or_ln6, %tmp_24" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 46 'and' 'and_ln6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.09>
ST_3 : Operation 47 [2/2] (5.09ns)   --->   "%tmp_25 = fcmp ogt float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 47 'fcmp' 'tmp_25' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [2/2] (5.09ns)   --->   "%tmp_29 = fcmp ole float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 48 'fcmp' 'tmp_29' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [2/2] (5.09ns)   --->   "%tmp_30 = fcmp ogt float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 49 'fcmp' 'tmp_30' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [2/2] (5.09ns)   --->   "%tmp_31 = fcmp olt float %vec_read, 4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 50 'fcmp' 'tmp_31' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [2/2] (4.09ns)   --->   "%tmp_19 = fpext float %vec_read to double" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 51 'fpext' 'tmp_19' <Predicate = (!and_ln6)> <Delay = 4.09> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.07>
ST_4 : Operation 52 [1/2] (5.09ns)   --->   "%tmp_25 = fcmp ogt float %vec_read, -4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 52 'fcmp' 'tmp_25' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node and_ln8_1)   --->   "%and_ln8 = and i1 %or_ln6, %tmp_25" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 53 'and' 'and_ln8' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/2] (5.09ns)   --->   "%tmp_29 = fcmp ole float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 54 'fcmp' 'tmp_29' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln8_1 = and i1 %and_ln8, %tmp_29" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 55 'and' 'and_ln8_1' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/2] (5.09ns)   --->   "%tmp_30 = fcmp ogt float %vec_read, 0.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 56 'fcmp' 'tmp_30' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/2] (5.09ns)   --->   "%tmp_31 = fcmp olt float %vec_read, 4.000000e+00" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 57 'fcmp' 'tmp_31' <Predicate = (!and_ln6)> <Delay = 5.09> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/2] (4.09ns)   --->   "%tmp_19 = fpext float %vec_read to double" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 58 'fpext' 'tmp_19' <Predicate = (!and_ln6)> <Delay = 4.09> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.86>
ST_5 : Operation 59 [6/6] (8.86ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 59 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 8.86> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.79>
ST_6 : Operation 60 [5/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 60 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.79>
ST_7 : Operation 61 [4/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 61 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.79>
ST_8 : Operation 62 [3/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 62 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.79>
ST_9 : Operation 63 [2/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 63 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.79>
ST_10 : Operation 64 [1/1] (0.97ns)   --->   "%xor_ln6 = xor i1 %and_ln6, true" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 64 'xor' 'xor_ln6' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%xor_ln8 = xor i1 %and_ln8_1, true" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 65 'xor' 'xor_ln8' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10 = and i1 %or_ln6, %tmp_31" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 66 'and' 'and_ln10' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 67 [1/6] (7.79ns)   --->   "%tmp_20 = fmul double %tmp_19, 2.500000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 67 'dmul' 'tmp_20' <Predicate = (!and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10_1 = and i1 %xor_ln8, %xor_ln6" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 68 'and' 'and_ln10_1' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node and_ln10_3)   --->   "%and_ln10_2 = and i1 %and_ln10, %tmp_30" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 69 'and' 'and_ln10_2' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 70 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln10_3 = and i1 %and_ln10_2, %and_ln10_1" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 70 'and' 'and_ln10_3' <Predicate = (!and_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 8.39>
ST_11 : Operation 71 [6/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 71 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 72 [6/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 72 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 8.39>
ST_12 : Operation 73 [5/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 73 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 74 [5/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 74 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 8.39>
ST_13 : Operation 75 [4/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 75 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 76 [4/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 76 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 8.39>
ST_14 : Operation 77 [3/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 77 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 78 [3/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 78 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 8.39>
ST_15 : Operation 79 [2/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 79 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 80 [2/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 80 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 8.39>
ST_16 : Operation 81 [1/6] (8.39ns)   --->   "%tmp_21 = fadd double %tmp_20, 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 81 'dadd' 'tmp_21' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 82 [1/6] (8.39ns)   --->   "%tmp_23 = fadd double %tmp_20, -1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 82 'dadd' 'tmp_23' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 8.86>
ST_17 : Operation 83 [6/6] (8.86ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 83 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.86> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 84 [6/6] (8.86ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 84 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.86> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.79>
ST_18 : Operation 85 [5/6] (7.79ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 85 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 86 [5/6] (7.79ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 86 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.79>
ST_19 : Operation 87 [4/6] (7.79ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 87 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 88 [4/6] (7.79ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 88 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.79>
ST_20 : Operation 89 [3/6] (7.79ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 89 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 90 [3/6] (7.79ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 90 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.79>
ST_21 : Operation 91 [2/6] (7.79ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 91 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 92 [2/6] (7.79ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 92 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.79>
ST_22 : Operation 93 [1/6] (7.79ns)   --->   "%tmp_s = fmul double %tmp_21, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 93 'dmul' 'tmp_s' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 94 [1/6] (7.79ns)   --->   "%tmp_26 = fmul double %tmp_23, 5.000000e-01" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 94 'dmul' 'tmp_26' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 8.86>
ST_23 : Operation 95 [6/6] (8.86ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 95 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 8.86> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 96 [6/6] (8.86ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 96 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.86> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.79>
ST_24 : Operation 97 [5/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 97 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 98 [5/6] (7.79ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 98 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.79>
ST_25 : Operation 99 [4/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 99 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 100 [4/6] (7.79ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 100 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.79>
ST_26 : Operation 101 [3/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 101 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 102 [3/6] (7.79ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 102 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 7.79>
ST_27 : Operation 103 [2/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 103 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 104 [2/6] (7.79ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 104 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.79>
ST_28 : Operation 105 [1/6] (7.79ns)   --->   "%tmp_22 = fmul double %tmp_s, %tmp_21" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 105 'dmul' 'tmp_22' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 106 [1/6] (7.79ns)   --->   "%tmp_27 = fmul double %tmp_26, %tmp_23" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 106 'dmul' 'tmp_27' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 7.79> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 7.79> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 8.39>
ST_29 : Operation 107 [2/2] (5.16ns)   --->   "%vec_assign = fptrunc double %tmp_22 to float" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 107 'fptrunc' 'vec_assign' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_29 : Operation 108 [6/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 108 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 8.39>
ST_30 : Operation 109 [1/2] (5.16ns)   --->   "%vec_assign = fptrunc double %tmp_22 to float" [neural_net_HLS/solution1/kernel.cpp:9]   --->   Operation 109 'fptrunc' 'vec_assign' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_30 : Operation 110 [5/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 110 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 8.39>
ST_31 : Operation 111 [4/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 111 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 8.39>
ST_32 : Operation 112 [3/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 112 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 8.39>
ST_33 : Operation 113 [2/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 113 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 8.39>
ST_34 : Operation 114 [1/6] (8.39ns)   --->   "%tmp_28 = fsub double 1.000000e+00, %tmp_27" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 114 'dsub' 'tmp_28' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 8.39> <Core = "DAddSub">   --->   Core 115 'DAddSub' <Latency = 5> <II = 1> <Delay = 8.39> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 5.16>
ST_35 : Operation 115 [2/2] (5.16ns)   --->   "%vec_assign_1 = fptrunc double %tmp_28 to float" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 115 'fptrunc' 'vec_assign_1' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 36 <SV = 35> <Delay = 6.14>
ST_36 : Operation 116 [1/2] (5.16ns)   --->   "%vec_assign_1 = fptrunc double %tmp_28 to float" [neural_net_HLS/solution1/kernel.cpp:11]   --->   Operation 116 'fptrunc' 'vec_assign_1' <Predicate = (and_ln10_3 & !and_ln6)> <Delay = 5.16> <Core = "Double2Float">   --->   Core 123 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.16> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>
ST_36 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln8_2 = and i1 %and_ln8_1, %xor_ln6" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 117 'and' 'and_ln8_2' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%select_ln8 = select i1 %and_ln8_2, float %vec_assign, float 1.000000e+00" [neural_net_HLS/solution1/kernel.cpp:8]   --->   Operation 118 'select' 'select_ln8' <Predicate = (!and_ln10_3 & !and_ln6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%select_ln10 = select i1 %and_ln10_3, float %vec_assign_1, float %select_ln8" [neural_net_HLS/solution1/kernel.cpp:10]   --->   Operation 119 'select' 'select_ln10' <Predicate = (!and_ln6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 120 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, float 0.000000e+00, float %select_ln10" [neural_net_HLS/solution1/kernel.cpp:6]   --->   Operation 120 'select' 'select_ln6' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 121 [1/1] (0.00ns)   --->   "ret float %select_ln6" [neural_net_HLS/solution1/kernel.cpp:14]   --->   Operation 121 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ vec]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
vec_read     (read      ) [ 0011100000000000000000000000000000000]
bitcast_ln6  (bitcast   ) [ 0000000000000000000000000000000000000]
tmp          (partselect) [ 0000000000000000000000000000000000000]
trunc_ln6    (trunc     ) [ 0000000000000000000000000000000000000]
icmp_ln6     (icmp      ) [ 0000000000000000000000000000000000000]
icmp_ln6_1   (icmp      ) [ 0000000000000000000000000000000000000]
or_ln6       (or        ) [ 0001111111100000000000000000000000000]
tmp_24       (fcmp      ) [ 0000000000000000000000000000000000000]
and_ln6      (and       ) [ 0001111111111111111111111111111111111]
tmp_25       (fcmp      ) [ 0000000000000000000000000000000000000]
and_ln8      (and       ) [ 0000000000000000000000000000000000000]
tmp_29       (fcmp      ) [ 0000000000000000000000000000000000000]
and_ln8_1    (and       ) [ 0000011111111111111111111111111111111]
tmp_30       (fcmp      ) [ 0000011111100000000000000000000000000]
tmp_31       (fcmp      ) [ 0000011111100000000000000000000000000]
tmp_19       (fpext     ) [ 0000011111100000000000000000000000000]
xor_ln6      (xor       ) [ 0000000000011111111111111111111111111]
xor_ln8      (xor       ) [ 0000000000000000000000000000000000000]
and_ln10     (and       ) [ 0000000000000000000000000000000000000]
tmp_20       (dmul      ) [ 0000000000011111100000000000000000000]
and_ln10_1   (and       ) [ 0000000000000000000000000000000000000]
and_ln10_2   (and       ) [ 0000000000000000000000000000000000000]
and_ln10_3   (and       ) [ 0000000000011111111111111111111111111]
tmp_21       (dadd      ) [ 0000000000000000011111111111100000000]
tmp_23       (dadd      ) [ 0000000000000000011111111111100000000]
tmp_s        (dmul      ) [ 0000000000000000000000011111100000000]
tmp_26       (dmul      ) [ 0000000000000000000000011111100000000]
tmp_22       (dmul      ) [ 0000000000000000000000000000011000000]
tmp_27       (dmul      ) [ 0000000000000000000000000000011111100]
vec_assign   (fptrunc   ) [ 0000000000000000000000000000000111111]
tmp_28       (dsub      ) [ 0000000000000000000000000000000000011]
vec_assign_1 (fptrunc   ) [ 0000000000000000000000000000000000000]
and_ln8_2    (and       ) [ 0000000000000000000000000000000000000]
select_ln8   (select    ) [ 0000000000000000000000000000000000000]
select_ln10  (select    ) [ 0000000000000000000000000000000000000]
select_ln6   (select    ) [ 0000000000000000000000000000000000000]
ret_ln14     (ret       ) [ 0000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="vec">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="vec"/></StgValue>
</bind>
</comp>

<comp id="2" class="1001" name="const_2">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.float"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1004" name="vec_read_read_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="32" slack="0"/>
<pin id="34" dir="0" index="1" bw="32" slack="0"/>
<pin id="35" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="vec_read/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="grp_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="64" slack="1"/>
<pin id="40" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="fptrunc(40) " fcode="fptrunc"/>
<opset="vec_assign/29 vec_assign_1/35 "/>
</bind>
</comp>

<comp id="41" class="1004" name="grp_fu_41">
<pin_list>
<pin id="42" dir="0" index="0" bw="32" slack="2"/>
<pin id="43" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="fpext(41) " fcode="fpext"/>
<opset="tmp_19/3 "/>
</bind>
</comp>

<comp id="44" class="1004" name="grp_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="32" slack="0"/>
<pin id="46" dir="0" index="1" bw="32" slack="0"/>
<pin id="47" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_24/1 tmp_25/3 "/>
</bind>
</comp>

<comp id="50" class="1004" name="grp_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="32" slack="2"/>
<pin id="52" dir="0" index="1" bw="32" slack="0"/>
<pin id="53" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_29/3 "/>
</bind>
</comp>

<comp id="55" class="1004" name="grp_fu_55">
<pin_list>
<pin id="56" dir="0" index="0" bw="32" slack="2"/>
<pin id="57" dir="0" index="1" bw="32" slack="0"/>
<pin id="58" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_30/3 "/>
</bind>
</comp>

<comp id="60" class="1004" name="grp_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="32" slack="2"/>
<pin id="62" dir="0" index="1" bw="32" slack="0"/>
<pin id="63" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_31/3 "/>
</bind>
</comp>

<comp id="65" class="1004" name="grp_fu_65">
<pin_list>
<pin id="66" dir="0" index="0" bw="64" slack="0"/>
<pin id="67" dir="0" index="1" bw="64" slack="0"/>
<pin id="68" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dadd(508) dsub(509) " fcode="dadd"/>
<opset="tmp_21/11 tmp_23/11 tmp_28/29 "/>
</bind>
</comp>

<comp id="72" class="1004" name="grp_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="64" slack="1"/>
<pin id="74" dir="0" index="1" bw="64" slack="0"/>
<pin id="75" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_20/5 tmp_s/17 tmp_26/17 tmp_22/23 tmp_27/23 "/>
</bind>
</comp>

<comp id="78" class="1005" name="reg_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="64" slack="1"/>
<pin id="80" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_20 tmp_s tmp_26 tmp_22 tmp_27 "/>
</bind>
</comp>

<comp id="86" class="1005" name="reg_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="64" slack="1"/>
<pin id="88" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_21 tmp_23 tmp_28 "/>
</bind>
</comp>

<comp id="93" class="1004" name="bitcast_ln6_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="32" slack="1"/>
<pin id="95" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln6/2 "/>
</bind>
</comp>

<comp id="96" class="1004" name="tmp_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="8" slack="0"/>
<pin id="98" dir="0" index="1" bw="32" slack="0"/>
<pin id="99" dir="0" index="2" bw="6" slack="0"/>
<pin id="100" dir="0" index="3" bw="6" slack="0"/>
<pin id="101" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="106" class="1004" name="trunc_ln6_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="32" slack="0"/>
<pin id="108" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln6/2 "/>
</bind>
</comp>

<comp id="110" class="1004" name="icmp_ln6_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="8" slack="0"/>
<pin id="112" dir="0" index="1" bw="1" slack="0"/>
<pin id="113" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6/2 "/>
</bind>
</comp>

<comp id="116" class="1004" name="icmp_ln6_1_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="23" slack="0"/>
<pin id="118" dir="0" index="1" bw="1" slack="0"/>
<pin id="119" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln6_1/2 "/>
</bind>
</comp>

<comp id="122" class="1004" name="or_ln6_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="1" slack="0"/>
<pin id="124" dir="0" index="1" bw="1" slack="0"/>
<pin id="125" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln6/2 "/>
</bind>
</comp>

<comp id="128" class="1004" name="and_ln6_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="1" slack="0"/>
<pin id="130" dir="0" index="1" bw="1" slack="0"/>
<pin id="131" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln6/2 "/>
</bind>
</comp>

<comp id="134" class="1004" name="and_ln8_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="1" slack="2"/>
<pin id="136" dir="0" index="1" bw="1" slack="0"/>
<pin id="137" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8/4 "/>
</bind>
</comp>

<comp id="139" class="1004" name="and_ln8_1_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="1" slack="0"/>
<pin id="141" dir="0" index="1" bw="1" slack="0"/>
<pin id="142" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8_1/4 "/>
</bind>
</comp>

<comp id="145" class="1004" name="xor_ln6_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="1" slack="8"/>
<pin id="147" dir="0" index="1" bw="1" slack="0"/>
<pin id="148" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln6/10 "/>
</bind>
</comp>

<comp id="150" class="1004" name="xor_ln8_fu_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="1" slack="6"/>
<pin id="152" dir="0" index="1" bw="1" slack="0"/>
<pin id="153" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln8/10 "/>
</bind>
</comp>

<comp id="155" class="1004" name="and_ln10_fu_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="1" slack="8"/>
<pin id="157" dir="0" index="1" bw="1" slack="6"/>
<pin id="158" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10/10 "/>
</bind>
</comp>

<comp id="159" class="1004" name="and_ln10_1_fu_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="1" slack="0"/>
<pin id="161" dir="0" index="1" bw="1" slack="0"/>
<pin id="162" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_1/10 "/>
</bind>
</comp>

<comp id="165" class="1004" name="and_ln10_2_fu_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="1" slack="0"/>
<pin id="167" dir="0" index="1" bw="1" slack="6"/>
<pin id="168" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_2/10 "/>
</bind>
</comp>

<comp id="170" class="1004" name="and_ln10_3_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="1" slack="0"/>
<pin id="172" dir="0" index="1" bw="1" slack="0"/>
<pin id="173" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_3/10 "/>
</bind>
</comp>

<comp id="176" class="1004" name="and_ln8_2_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="1" slack="32"/>
<pin id="178" dir="0" index="1" bw="1" slack="26"/>
<pin id="179" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln8_2/36 "/>
</bind>
</comp>

<comp id="180" class="1004" name="select_ln8_fu_180">
<pin_list>
<pin id="181" dir="0" index="0" bw="1" slack="0"/>
<pin id="182" dir="0" index="1" bw="32" slack="6"/>
<pin id="183" dir="0" index="2" bw="32" slack="0"/>
<pin id="184" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln8/36 "/>
</bind>
</comp>

<comp id="187" class="1004" name="select_ln10_fu_187">
<pin_list>
<pin id="188" dir="0" index="0" bw="1" slack="26"/>
<pin id="189" dir="0" index="1" bw="32" slack="0"/>
<pin id="190" dir="0" index="2" bw="32" slack="0"/>
<pin id="191" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln10/36 "/>
</bind>
</comp>

<comp id="194" class="1004" name="select_ln6_fu_194">
<pin_list>
<pin id="195" dir="0" index="0" bw="1" slack="34"/>
<pin id="196" dir="0" index="1" bw="32" slack="0"/>
<pin id="197" dir="0" index="2" bw="32" slack="0"/>
<pin id="198" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln6/36 "/>
</bind>
</comp>

<comp id="201" class="1005" name="vec_read_reg_201">
<pin_list>
<pin id="202" dir="0" index="0" bw="32" slack="1"/>
<pin id="203" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vec_read "/>
</bind>
</comp>

<comp id="211" class="1005" name="or_ln6_reg_211">
<pin_list>
<pin id="212" dir="0" index="0" bw="1" slack="2"/>
<pin id="213" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="or_ln6 "/>
</bind>
</comp>

<comp id="217" class="1005" name="and_ln6_reg_217">
<pin_list>
<pin id="218" dir="0" index="0" bw="1" slack="1"/>
<pin id="219" dir="1" index="1" bw="1" slack="8"/>
</pin_list>
<bind>
<opset="and_ln6 "/>
</bind>
</comp>

<comp id="223" class="1005" name="and_ln8_1_reg_223">
<pin_list>
<pin id="224" dir="0" index="0" bw="1" slack="6"/>
<pin id="225" dir="1" index="1" bw="1" slack="6"/>
</pin_list>
<bind>
<opset="and_ln8_1 "/>
</bind>
</comp>

<comp id="229" class="1005" name="tmp_30_reg_229">
<pin_list>
<pin id="230" dir="0" index="0" bw="1" slack="6"/>
<pin id="231" dir="1" index="1" bw="1" slack="6"/>
</pin_list>
<bind>
<opset="tmp_30 "/>
</bind>
</comp>

<comp id="234" class="1005" name="tmp_31_reg_234">
<pin_list>
<pin id="235" dir="0" index="0" bw="1" slack="6"/>
<pin id="236" dir="1" index="1" bw="1" slack="6"/>
</pin_list>
<bind>
<opset="tmp_31 "/>
</bind>
</comp>

<comp id="239" class="1005" name="tmp_19_reg_239">
<pin_list>
<pin id="240" dir="0" index="0" bw="64" slack="1"/>
<pin id="241" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_19 "/>
</bind>
</comp>

<comp id="244" class="1005" name="xor_ln6_reg_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="1" slack="26"/>
<pin id="246" dir="1" index="1" bw="1" slack="26"/>
</pin_list>
<bind>
<opset="xor_ln6 "/>
</bind>
</comp>

<comp id="249" class="1005" name="and_ln10_3_reg_249">
<pin_list>
<pin id="250" dir="0" index="0" bw="1" slack="1"/>
<pin id="251" dir="1" index="1" bw="1" slack="26"/>
</pin_list>
<bind>
<opset="and_ln10_3 "/>
</bind>
</comp>

<comp id="254" class="1005" name="vec_assign_reg_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="32" slack="6"/>
<pin id="256" dir="1" index="1" bw="32" slack="6"/>
</pin_list>
<bind>
<opset="vec_assign "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="36"><net_src comp="2" pin="0"/><net_sink comp="32" pin=0"/></net>

<net id="37"><net_src comp="0" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="48"><net_src comp="32" pin="2"/><net_sink comp="44" pin=0"/></net>

<net id="49"><net_src comp="4" pin="0"/><net_sink comp="44" pin=1"/></net>

<net id="54"><net_src comp="16" pin="0"/><net_sink comp="50" pin=1"/></net>

<net id="59"><net_src comp="16" pin="0"/><net_sink comp="55" pin=1"/></net>

<net id="64"><net_src comp="18" pin="0"/><net_sink comp="60" pin=1"/></net>

<net id="69"><net_src comp="24" pin="0"/><net_sink comp="65" pin=1"/></net>

<net id="70"><net_src comp="26" pin="0"/><net_sink comp="65" pin=1"/></net>

<net id="71"><net_src comp="24" pin="0"/><net_sink comp="65" pin=0"/></net>

<net id="76"><net_src comp="20" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="77"><net_src comp="28" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="81"><net_src comp="72" pin="2"/><net_sink comp="78" pin=0"/></net>

<net id="82"><net_src comp="78" pin="1"/><net_sink comp="65" pin=0"/></net>

<net id="83"><net_src comp="78" pin="1"/><net_sink comp="72" pin=0"/></net>

<net id="84"><net_src comp="78" pin="1"/><net_sink comp="38" pin=0"/></net>

<net id="85"><net_src comp="78" pin="1"/><net_sink comp="65" pin=1"/></net>

<net id="89"><net_src comp="65" pin="2"/><net_sink comp="86" pin=0"/></net>

<net id="90"><net_src comp="86" pin="1"/><net_sink comp="72" pin=0"/></net>

<net id="91"><net_src comp="86" pin="1"/><net_sink comp="72" pin=1"/></net>

<net id="92"><net_src comp="86" pin="1"/><net_sink comp="38" pin=0"/></net>

<net id="102"><net_src comp="6" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="103"><net_src comp="93" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="104"><net_src comp="8" pin="0"/><net_sink comp="96" pin=2"/></net>

<net id="105"><net_src comp="10" pin="0"/><net_sink comp="96" pin=3"/></net>

<net id="109"><net_src comp="93" pin="1"/><net_sink comp="106" pin=0"/></net>

<net id="114"><net_src comp="96" pin="4"/><net_sink comp="110" pin=0"/></net>

<net id="115"><net_src comp="12" pin="0"/><net_sink comp="110" pin=1"/></net>

<net id="120"><net_src comp="106" pin="1"/><net_sink comp="116" pin=0"/></net>

<net id="121"><net_src comp="14" pin="0"/><net_sink comp="116" pin=1"/></net>

<net id="126"><net_src comp="116" pin="2"/><net_sink comp="122" pin=0"/></net>

<net id="127"><net_src comp="110" pin="2"/><net_sink comp="122" pin=1"/></net>

<net id="132"><net_src comp="122" pin="2"/><net_sink comp="128" pin=0"/></net>

<net id="133"><net_src comp="44" pin="2"/><net_sink comp="128" pin=1"/></net>

<net id="138"><net_src comp="44" pin="2"/><net_sink comp="134" pin=1"/></net>

<net id="143"><net_src comp="134" pin="2"/><net_sink comp="139" pin=0"/></net>

<net id="144"><net_src comp="50" pin="2"/><net_sink comp="139" pin=1"/></net>

<net id="149"><net_src comp="22" pin="0"/><net_sink comp="145" pin=1"/></net>

<net id="154"><net_src comp="22" pin="0"/><net_sink comp="150" pin=1"/></net>

<net id="163"><net_src comp="150" pin="2"/><net_sink comp="159" pin=0"/></net>

<net id="164"><net_src comp="145" pin="2"/><net_sink comp="159" pin=1"/></net>

<net id="169"><net_src comp="155" pin="2"/><net_sink comp="165" pin=0"/></net>

<net id="174"><net_src comp="165" pin="2"/><net_sink comp="170" pin=0"/></net>

<net id="175"><net_src comp="159" pin="2"/><net_sink comp="170" pin=1"/></net>

<net id="185"><net_src comp="176" pin="2"/><net_sink comp="180" pin=0"/></net>

<net id="186"><net_src comp="30" pin="0"/><net_sink comp="180" pin=2"/></net>

<net id="192"><net_src comp="38" pin="1"/><net_sink comp="187" pin=1"/></net>

<net id="193"><net_src comp="180" pin="3"/><net_sink comp="187" pin=2"/></net>

<net id="199"><net_src comp="16" pin="0"/><net_sink comp="194" pin=1"/></net>

<net id="200"><net_src comp="187" pin="3"/><net_sink comp="194" pin=2"/></net>

<net id="204"><net_src comp="32" pin="2"/><net_sink comp="201" pin=0"/></net>

<net id="205"><net_src comp="201" pin="1"/><net_sink comp="93" pin=0"/></net>

<net id="206"><net_src comp="201" pin="1"/><net_sink comp="44" pin=0"/></net>

<net id="207"><net_src comp="201" pin="1"/><net_sink comp="50" pin=0"/></net>

<net id="208"><net_src comp="201" pin="1"/><net_sink comp="55" pin=0"/></net>

<net id="209"><net_src comp="201" pin="1"/><net_sink comp="60" pin=0"/></net>

<net id="210"><net_src comp="201" pin="1"/><net_sink comp="41" pin=0"/></net>

<net id="214"><net_src comp="122" pin="2"/><net_sink comp="211" pin=0"/></net>

<net id="215"><net_src comp="211" pin="1"/><net_sink comp="134" pin=0"/></net>

<net id="216"><net_src comp="211" pin="1"/><net_sink comp="155" pin=0"/></net>

<net id="220"><net_src comp="128" pin="2"/><net_sink comp="217" pin=0"/></net>

<net id="221"><net_src comp="217" pin="1"/><net_sink comp="145" pin=0"/></net>

<net id="222"><net_src comp="217" pin="1"/><net_sink comp="194" pin=0"/></net>

<net id="226"><net_src comp="139" pin="2"/><net_sink comp="223" pin=0"/></net>

<net id="227"><net_src comp="223" pin="1"/><net_sink comp="150" pin=0"/></net>

<net id="228"><net_src comp="223" pin="1"/><net_sink comp="176" pin=0"/></net>

<net id="232"><net_src comp="55" pin="2"/><net_sink comp="229" pin=0"/></net>

<net id="233"><net_src comp="229" pin="1"/><net_sink comp="165" pin=1"/></net>

<net id="237"><net_src comp="60" pin="2"/><net_sink comp="234" pin=0"/></net>

<net id="238"><net_src comp="234" pin="1"/><net_sink comp="155" pin=1"/></net>

<net id="242"><net_src comp="41" pin="1"/><net_sink comp="239" pin=0"/></net>

<net id="243"><net_src comp="239" pin="1"/><net_sink comp="72" pin=0"/></net>

<net id="247"><net_src comp="145" pin="2"/><net_sink comp="244" pin=0"/></net>

<net id="248"><net_src comp="244" pin="1"/><net_sink comp="176" pin=1"/></net>

<net id="252"><net_src comp="170" pin="2"/><net_sink comp="249" pin=0"/></net>

<net id="253"><net_src comp="249" pin="1"/><net_sink comp="187" pin=0"/></net>

<net id="257"><net_src comp="38" pin="1"/><net_sink comp="254" pin=0"/></net>

<net id="258"><net_src comp="254" pin="1"/><net_sink comp="180" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: act_fun : vec | {1 }
  - Chain level:
	State 1
	State 2
		tmp : 1
		trunc_ln6 : 1
		icmp_ln6 : 2
		icmp_ln6_1 : 2
		or_ln6 : 3
		and_ln6 : 3
	State 3
	State 4
		and_ln8 : 1
		and_ln8_1 : 1
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
		select_ln10 : 1
		select_ln6 : 2
		ret_ln14 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------|---------|---------|---------|
| Operation|   Functional Unit   |  DSP48E |    FF   |   LUT   |
|----------|---------------------|---------|---------|---------|
|   dadd   |      grp_fu_65      |    3    |   509   |   817   |
|----------|---------------------|---------|---------|---------|
|          |      grp_fu_44      |    0    |    66   |    70   |
|   fcmp   |      grp_fu_50      |    0    |    66   |    70   |
|          |      grp_fu_55      |    0    |    66   |    70   |
|          |      grp_fu_60      |    0    |    66   |    70   |
|----------|---------------------|---------|---------|---------|
|   dmul   |      grp_fu_72      |    11   |   317   |   204   |
|----------|---------------------|---------|---------|---------|
|  fptrunc |      grp_fu_38      |    0    |   128   |   103   |
|----------|---------------------|---------|---------|---------|
|   fpext  |      grp_fu_41      |    0    |   100   |    54   |
|----------|---------------------|---------|---------|---------|
|          |  select_ln8_fu_180  |    0    |    0    |    32   |
|  select  |  select_ln10_fu_187 |    0    |    0    |    32   |
|          |  select_ln6_fu_194  |    0    |    0    |    32   |
|----------|---------------------|---------|---------|---------|
|   icmp   |   icmp_ln6_fu_110   |    0    |    0    |    11   |
|          |  icmp_ln6_1_fu_116  |    0    |    0    |    18   |
|----------|---------------------|---------|---------|---------|
|          |    and_ln6_fu_128   |    0    |    0    |    2    |
|          |    and_ln8_fu_134   |    0    |    0    |    2    |
|          |   and_ln8_1_fu_139  |    0    |    0    |    2    |
|    and   |   and_ln10_fu_155   |    0    |    0    |    2    |
|          |  and_ln10_1_fu_159  |    0    |    0    |    2    |
|          |  and_ln10_2_fu_165  |    0    |    0    |    2    |
|          |  and_ln10_3_fu_170  |    0    |    0    |    2    |
|          |   and_ln8_2_fu_176  |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|    xor   |    xor_ln6_fu_145   |    0    |    0    |    2    |
|          |    xor_ln8_fu_150   |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|    or    |    or_ln6_fu_122    |    0    |    0    |    2    |
|----------|---------------------|---------|---------|---------|
|   read   | vec_read_read_fu_32 |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|partselect|      tmp_fu_96      |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   trunc  |   trunc_ln6_fu_106  |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   Total  |                     |    14   |   1318  |   1605  |
|----------|---------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+------------------+--------+
|                  |   FF   |
+------------------+--------+
|and_ln10_3_reg_249|    1   |
|  and_ln6_reg_217 |    1   |
| and_ln8_1_reg_223|    1   |
|  or_ln6_reg_211  |    1   |
|      reg_78      |   64   |
|      reg_86      |   64   |
|  tmp_19_reg_239  |   64   |
|  tmp_30_reg_229  |    1   |
|  tmp_31_reg_234  |    1   |
|vec_assign_reg_254|   32   |
| vec_read_reg_201 |   32   |
|  xor_ln6_reg_244 |    1   |
+------------------+--------+
|       Total      |   263  |
+------------------+--------+

* Multiplexer (MUX) list: 
|-----------|------|------|------|--------||---------||---------|
|    Comp   |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------|------|------|------|--------||---------||---------|
| grp_fu_38 |  p0  |   2  |  64  |   128  ||    9    |
| grp_fu_44 |  p0  |   2  |  32  |   64   ||    9    |
| grp_fu_65 |  p0  |   2  |  64  |   128  ||    9    |
| grp_fu_65 |  p1  |   3  |  64  |   192  ||    9    |
| grp_fu_72 |  p0  |   3  |  64  |   192  ||    15   |
| grp_fu_72 |  p1  |   3  |  64  |   192  ||    9    |
|-----------|------|------|------|--------||---------||---------|
|   Total   |      |      |      |   896  || 10.1182 ||    60   |
|-----------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   14   |    -   |  1318  |  1605  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |   10   |    -   |   60   |
|  Register |    -   |    -   |   263  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   14   |   10   |  1581  |  1665  |
+-----------+--------+--------+--------+--------+
